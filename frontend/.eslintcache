[{"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\index.js":"1","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\store.js":"4","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\App.jsx":"5","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\PetApp.jsx":"6","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\Profile.jsx":"7","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\Explore.jsx":"8","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\Footer.jsx":"9","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\SocketsNotification.jsx":"10","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\Header.jsx":"11","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\LoginSignup.jsx":"12","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\PetDetails.jsx":"13","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\index.js":"14","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\actions\\petActions.js":"15","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\actions\\userActions.js":"16","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\petService.js":"17","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\utilService.js":"18","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\socketService.js":"19","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\userReducer.js":"20","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\systemReducer.js":"21","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\petReducer.js":"22","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\PetList.jsx":"23","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\HomepagePreview.jsx":"24","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\FilterDynamic.jsx":"25","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\LongTxt.jsx":"26","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\CommentsCmp.jsx":"27","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\HeartLike.jsx":"28","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\GoogleMap.jsx":"29","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\PetPreview.jsx":"30","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\userService.js":"31","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\httpService.js":"32","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\asyncStorageService.js":"33","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\PetFilter.jsx":"34","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\FilterSelect.jsx":"35"},{"size":937,"mtime":1622116980749,"results":"36","hashOfConfig":"37"},{"size":5201,"mtime":1622109037239,"results":"38","hashOfConfig":"37"},{"size":377,"mtime":1622109037238,"results":"39","hashOfConfig":"37"},{"size":439,"mtime":1622123103015,"results":"40","hashOfConfig":"37"},{"size":1095,"mtime":1623091187857,"results":"41","hashOfConfig":"37"},{"size":7121,"mtime":1623011886578,"results":"42","hashOfConfig":"37"},{"size":13596,"mtime":1623094822156,"results":"43","hashOfConfig":"37"},{"size":3792,"mtime":1623058457713,"results":"44","hashOfConfig":"37"},{"size":804,"mtime":1622919027463,"results":"45","hashOfConfig":"37"},{"size":2069,"mtime":1623092152062,"results":"46","hashOfConfig":"37"},{"size":6211,"mtime":1623091390457,"results":"47","hashOfConfig":"37"},{"size":5193,"mtime":1623049542299,"results":"48","hashOfConfig":"37"},{"size":12859,"mtime":1623064647879,"results":"49","hashOfConfig":"37"},{"size":319,"mtime":1622316979767,"results":"50","hashOfConfig":"37"},{"size":2236,"mtime":1623093498290,"results":"51","hashOfConfig":"37"},{"size":4133,"mtime":1623095764052,"results":"52","hashOfConfig":"37"},{"size":2228,"mtime":1622979025036,"results":"53","hashOfConfig":"37"},{"size":2198,"mtime":1622973523568,"results":"54","hashOfConfig":"37"},{"size":2626,"mtime":1622999082206,"results":"55","hashOfConfig":"37"},{"size":1460,"mtime":1622792945598,"results":"56","hashOfConfig":"37"},{"size":735,"mtime":1622909244691,"results":"57","hashOfConfig":"37"},{"size":2152,"mtime":1623055339979,"results":"58","hashOfConfig":"37"},{"size":369,"mtime":1622900286718,"results":"59","hashOfConfig":"37"},{"size":2636,"mtime":1623052332372,"results":"60","hashOfConfig":"37"},{"size":1429,"mtime":1623011886571,"results":"61","hashOfConfig":"37"},{"size":905,"mtime":1623011886574,"results":"62","hashOfConfig":"37"},{"size":4785,"mtime":1623050969525,"results":"63","hashOfConfig":"37"},{"size":2639,"mtime":1622988521644,"results":"64","hashOfConfig":"37"},{"size":1506,"mtime":1622608313977,"results":"65","hashOfConfig":"37"},{"size":1738,"mtime":1623011886575,"results":"66","hashOfConfig":"37"},{"size":3906,"mtime":1623095678642,"results":"67","hashOfConfig":"37"},{"size":1142,"mtime":1623093522040,"results":"68","hashOfConfig":"37"},{"size":3489,"mtime":1622909244689,"results":"69","hashOfConfig":"37"},{"size":4611,"mtime":1623071322457,"results":"70","hashOfConfig":"37"},{"size":736,"mtime":1623058457709,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"aanmm",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\index.js",[],["150","151"],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\store.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\App.jsx",["152"],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\PetApp.jsx",["153"],"import { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport { loadPets, addPet } from '../store/actions/petActions'\r\nimport { onHome, showSearch, hideSearch } from '../store/actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\nimport { FilterDynamic } from '../cmps/FilterDynamic'\r\nimport { HomepagePreview } from '../cmps/HomepagePreview'\r\nimport contact from '../assets/img/svg/contact.svg'\r\nimport info from '../assets/img/svg/info.svg'\r\nimport rightArrow from '../assets/img/svg/arrow-right.png'\r\nimport paw from '../assets/img/svg/paw.svg'\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport { ReactComponent as Loader } from '../assets/img/loaders/loader_3.svg' // relative path to image \r\n\r\n\r\nclass _PetApp extends React.Component {\r\n\r\n    async componentDidMount() {\r\n        window.scroll(0, 0)\r\n        this.props.hideSearch()\r\n        this.props.onHome()\r\n        await this.props.loadPets()\r\n    }\r\n\r\n    render() {\r\n        const { pets } = this.props\r\n        if (pets.length === 0) return <Loader />\r\n        return (\r\n            <section className=\"main-container\">\r\n                <section className=\"hero full\">\r\n                    <div className=\"hero-content\">\r\n                        <FilterDynamic />\r\n                        <h1>Find your</h1>\r\n                        <h1> best friend</h1>\r\n                    </div>\r\n                </section>\r\n                <div className=\"type-cards\">\r\n                    <h2 className=\"type-cards-title\">Our sweet pet types</h2>\r\n                    <div className=\"type-img\">\r\n                        <div>\r\n                            <Link to={`/explore/?gender=&age=&type=dog&location=&size=`} >\r\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622205405/dogs/dog3/frnach-dog3_npdovb.jpg\" alt=\"card\" />\r\n                                <h4>Dogs</h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link to={`/explore/?gender=&age=&type=cat&location=&size=`} >\r\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622203804/petMe/cats/cat_nnrk1h.jpg\" alt=\"card\" />\r\n                                <h4>Cats</h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link to={`/explore/?gender=&age=&type=rabbit&location=&size=`} >\r\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622206572/petMe/rabbit/rrabit3/1_2_chadja.jpg\" alt=\"card\" />\r\n                                <h4>Rabbits</h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link to={`/explore/?gender=&age=&type=parrot&location=&size=`} >\r\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622213930/petMe/parrot/1_3_s1zdqk.jpg\" alt=\"card\" />\r\n                                <h4>Parrots</h4>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <section className=\"homepage-section-info\">\r\n                    <div className=\"content\">\r\n                        <div>\r\n                            <div className=\"info-title-icon\">\r\n                                <h2>Filter down to your perfect fit</h2>\r\n                                {/* <img className=\"info-icons\" src={magnifyingGlass} alt=\"glass\" /> */}\r\n                                <SearchOutlinedIcon className=\"info-icons\" />\r\n                            </div>\r\n                            <p> Personalize your search with filters like gender,\r\n                            type, size or a pool to get exactly what you want.\r\n                            {/* <img className=\"arrow-icons\" src={rightArrow} alt=\"\" /> */}\r\n                            </p>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"info-title-icon\">\r\n                                <h2>Dig into the details</h2>\r\n                                <img className=\"info-icons\" src={info} alt=\"glass\" />\r\n                            </div>\r\n                            <p> Check out the photos and view pet information.\r\n                                Next, read user reviews and comments about the pet and its owner.\r\n                                {/* <img className=\"arrow-icons\" src={rightArrow} alt=\"\" /> */}\r\n                                </p>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"info-title-icon\">\r\n                                <h2>Contact pet owners</h2>\r\n                                <img className=\"info-icons\" src={contact} alt=\"glass\" />\r\n                            </div>\r\n                            <p>  Once you have decided which pet you would like to adopt, contact the pet owners and keep your fingers crossed.\r\n                            {/* <img className=\"arrow-icons\" src={rightArrow} alt=\"\" /> */}\r\n                            </p>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"info-title-icon\">\r\n                                <h2>Adopt a friend!</h2>\r\n                                <img className=\"info-icons\" src={paw} alt=\"glass\" />\r\n                            </div>\r\n                            <p> In a quick and easy process you can adopt a pet that will become your new companion for life. Join us for a fun journey! \r\n                                \r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <HomepagePreview pets={this.props.pets} />\r\n                <section className=\"homepage-about main-container full\">\r\n                    <div className=\"blur full\">\r\n                        <div className=\"about-content flex column\">\r\n                            <h2>Our vision</h2>\r\n                            <p>PetMe is dedicated to saving the lives of animals in need. We improve animal welfare in communities through adoption, education, and providing resources for people and pets.</p>\r\n                            <p>We strive for a world where every companion animal has a safe and loving home and their family has the knowledge and resources needed to give them the life they deserve.</p>\r\n                            <img className=\"welcome-logo\" src=\"https://petcolove.org/wp-content/uploads/2018/08/welcome-to-the-family-web.png\" alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        pets: state.petModule.pets\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadPets,\r\n    addPet,\r\n    onHome,\r\n    showSearch,\r\n    hideSearch\r\n}\r\n\r\nexport const PetApp = connect(mapStateToProps, mapDispatchToProps)(_PetApp)","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\Profile.jsx",["154"],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\Explore.jsx",["155","156","157"],"import { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport { loadPets } from '../store/actions/petActions'\r\nimport { onExplore, showSearch } from '../store/actions/userActions'\r\nimport { PetList } from '../cmps/PetList'\r\nimport userIcon from '../assets/img/loaders/loader_2.svg' // relative path to image\r\nimport magnifyingGlass from '../assets/img/svg/magnifying-glass.svg' // relative path to image \r\n\r\nclass _Explore extends React.Component {\r\n    state = {\r\n        isFilterShown: false,\r\n        filterBy: null,\r\n        sortBy: ''\r\n    }\r\n    async componentDidMount() {\r\n        console.log('cdm');\r\n        window.scroll(0, 0)\r\n        this.props.onExplore()\r\n        this.props.showSearch()\r\n        await this.onSetFilter()\r\n        await this.props.loadPets(this.state.filterBy)\r\n    }\r\n\r\n    onSetSort = () => {\r\n        const { filterBy, sortBy } = this.state\r\n        let filter = {\r\n            ...filterBy,\r\n            sort: sortBy\r\n        }\r\n        this.props.loadPets(filter)\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ sortBy: event.target.value },\r\n            () => {\r\n                this.onSetSort()\r\n            })\r\n    }\r\n\r\n    onSetFilter = () => {\r\n        const search = new URLSearchParams(this.props.location.search)\r\n        let filterBy = {\r\n            gender: search.get('gender'),\r\n            type: search.get('type'),\r\n            age: search.get('age'),\r\n            size: search.get('size'),\r\n            location: search.get('location'),\r\n        }\r\n        this.setState({ filterBy })\r\n    }\r\n\r\n    onToggleFilter = () => {\r\n        this.setState({ isFilterShown: !this.state.isFilterShown }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { pets } = this.props\r\n        const { isFilterShown, filterBy, sortBy } = this.state\r\n        if (!pets) return <img src={userIcon} alt=\"loading\" />\r\n        if (!filterBy) return <img src={userIcon} alt=\"loading\" />\r\n        return (\r\n            <section className=\"main-container explore-container\">\r\n\r\n                {/* {!isFilterShown && <div className=\"explore-search\">\r\n                    <span onClick={() => this.onToggleFilter()} > Start your search</span>\r\n                    <div className=\"search-btn-explore\">\r\n                        <img className=\"filter-search\" src={ magnifyingGlass } alt=\"glass\" />\r\n                    </div>\r\n                </div>} */}\r\n\r\n                {/* {isFilterShown && <PetFilter />} */}\r\n                {/* <section className=\"sort-by\"> */}\r\n                {/* <FormControl className={classes.formControl}> */}\r\n                {/* </section> */}\r\n\r\n                <div className=\"filter-description\">\r\n                    {!filterBy.type && <h1 >Our pets</h1>}\r\n                    {filterBy.type && <h1>Our <span> {filterBy.gender} {filterBy.size}  {filterBy.type}s</span>  </h1>}\r\n\r\n                    <div className=\"sort-form\">\r\n                        <label >Sort By</label>\r\n                        <select value={this.state.sortBy} onChange={this.handleChange}>\r\n                            {/* <option value=\"\">Any</option> */}\r\n                            <option value=\"createdAt\">Date</option>\r\n                            <option value=\"name\">Name</option>\r\n                            <option value=\"likes\">Likes</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                < PetList pets={pets} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        pets: state.petModule.pets,\r\n        inExplore: state.systemModule.onExplore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadPets, onExplore, showSearch\r\n}\r\n\r\nexport const Explore = connect(mapStateToProps, mapDispatchToProps)(_Explore)\r\n","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\Footer.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\SocketsNotification.jsx",["158"],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\Header.jsx",["159","160","161"],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\PetDetails.jsx",["162"],"import React, { Component } from 'react'\r\nimport { petService } from '../services/petService'\r\nimport { utilService } from '../services/utilService'\r\nimport { socketService } from '../services/socketService'\r\nimport { connect } from 'react-redux'\r\nimport { toggleLike, loadPets } from '../store/actions/petActions'\r\nimport { loadUsers, newAdoptRequest, onExplore } from '../store/actions/userActions'\r\nimport { LongTxt } from '../cmps/LongTxt'\r\nimport { CommentsCmp } from '../cmps/CommentsCmp'\r\nimport { HeartLike } from '../cmps/HeartLike'\r\nimport { GoogleMap } from '../cmps/GoogleMap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n// import CheckIcon from '@material-ui/icons/Check';\r\n// import CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\r\n// import CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\r\nimport { faVenusMars, faCat, faSyringe, faStethoscope, faCalendar } from '@fortawesome/free-solid-svg-icons';\r\nimport SportsIcon from '@material-ui/icons/Sports';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport { ReactComponent as Binoculars } from '../assets/img/svg/binoculars.svg'\r\nimport { ReactComponent as Paw } from '../assets/img/svg/paw.svg'\r\n// import PetsIcon from '@material-ui/icons/Pets';\r\n\r\nimport \"../../node_modules/slick-carousel/slick/slick.css\";\r\nimport \"../../node_modules/slick-carousel/slick/slick-theme.css\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\n\r\nclass _PetDetails extends Component {\r\n    state = {\r\n        pet: null,\r\n        owner: null,\r\n        loggedInUser: null,\r\n        isEditMode: false,\r\n        isOpanModal: false,\r\n        isAttend: false,\r\n        isMobileScreen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        // window.addEventListener(\"resize\", this.screenWidth);\r\n        this.checkScreenWidth()\r\n        window.scroll(0, 0)\r\n        this.props.onExplore()\r\n        const id = this.props.match.params.petId;\r\n        // socketService.setup()\r\n     this.props.loadPets()\r\n            .then(() => {\r\n                const pet = this.props.pets.find(pet => pet._id === id)\r\n                this.props.loadUsers()\r\n                    .then(() => {\r\n                        const user = this.props.users.find(user => user._id === pet.owner._id)\r\n                        this.setState({ pet, owner: user, loggedInUser: this.props.loggedInUser })\r\n                    })\r\n            })    // socketService.emit('adopt-request', id)\r\n\r\n       \r\n    }\r\n    // componentWillUnmount() {\r\n    //     window.removeEventListener('resize', this.screenWidth)\r\n    // }\r\n\r\n    checkScreenWidth = () => {\r\n        if (window.innerWidth > 500) {\r\n            this.setState({ isMobileScreen: false });\r\n        } else {\r\n            this.setState({ isMobileScreen: true });\r\n        }\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const { name } = target\r\n        const { value } = target\r\n        this.setState({ pet: { ...this.state.pet, [name]: value } })\r\n    }\r\n\r\n    onShare = () => {\r\n        this.setState({ isOpanModal: !this.state.isOpanModal })\r\n    }\r\n\r\n    //owner only btn\r\n    onUpdatePet = () => {\r\n        this.props.updatePet(this.state.pet)\r\n        this.toggleEditMode()\r\n    }\r\n\r\n    //for owner edit adoption option\r\n    toggleEditMode = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n\r\n    onAdopt = () => {\r\n        const { pet, owner, loggedInUser } = this.state\r\n        if (!loggedInUser) return alert('Please login in order to adopt this pet ')\r\n        if (loggedInUser.pets.find(loggedInUserPet => loggedInUserPet._id === pet._id)) return alert('You cannot adopt you own pet')\r\n        this.setState({ isAttend: true })\r\n        const data = {\r\n            owner: owner,\r\n            petId: pet._id,\r\n            msgToOwner: `${loggedInUser.fullname} would like to adopt ${pet.name} \\n Click to view`,\r\n            msgToRequester: `${loggedInUser.fullname} recived your adopt request \\n Click to view`,\r\n            newRequest: {\r\n                date: Date.now(),\r\n                fullname: loggedInUser.fullname,\r\n                userId: loggedInUser._id,\r\n                message: `${loggedInUser.fullname} would like to adopt ${pet.name}`,\r\n                chatId: 'c' + utilService.makeId(7),\r\n            }\r\n        }\r\n        this.props.newAdoptRequest(data)\r\n    }\r\n\r\n\r\n    //if the user clicked attend let the user reclick to undo\r\n    toggleAdopted = () => {\r\n        this.setState({ isAttend: true })\r\n    }\r\n\r\n    onRemovePet = () => {\r\n        petService.remove(this.state.pet._id)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { isMobileScreen } = this.state\r\n        const id = this.props.match.params.petId\r\n        const pet = this.props.pets.find(pet => pet._id === id)\r\n        // const { pet } = this.props\r\n        const settings = {\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1\r\n        };\r\n        if (!pet) return <h1>loading</h1>\r\n\r\n        return (\r\n            <section className=\"pet-details-section main-container\">\r\n                <header className=\"details-header flex column\">\r\n                    <div className=\"details-title flex column\">\r\n                        <h1 className=\"pet-name\">{ pet.name }</h1>\r\n                    </div>\r\n                    <div className=\"details-header-btns\">\r\n                        {/* TODO: add icons +actions btns */ }\r\n                        <HeartLike pet={ pet } />\r\n                        <span className=\"pet-likes\">{ pet.likes }</span>\r\n\r\n                        <span className=\"share-pet\" onClick={ () => this.onShare }><ShareIcon />\r\n                            <div className={ 'share-modal' + this.state.isOpanModal ? 'hide' : '' }>\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                </header>\r\n                {!isMobileScreen &&\r\n                    <div className=\"details-imgs-container grid\">\r\n                        {pet.imgUrls.map((imgUrl, idx) => {\r\n                            return <img key={pet._id + idx} src={imgUrl} alt=\"skeleton\" />\r\n                        })}\r\n                    </div>}\r\n                {isMobileScreen &&\r\n                    <div className=\"details-imgs-container grid\">\r\n                        <Slider {...settings}>\r\n                            {pet.imgUrls.map((imgUrl, idx) => {\r\n                                return <img key={pet._id + idx} src={imgUrl} alt=\"skeleton\" />\r\n                            })}\r\n                        </Slider>\r\n                     </div>\r\n                    }\r\n                <div className=\"details-main-section flex\">\r\n\r\n                    <div className=\"details-info-container\">\r\n                        <div className=\"info-header flex \">\r\n                            <img src={ pet.owner.imgUrl } alt=\"\" />\r\n                            <div className=\"info-header-txt flex column\">\r\n                                <h3>{ pet.name + ', owned by ' + pet.owner.name }</h3>\r\n                                <span>{ pet.title }</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"info-body\">\r\n                            <LongTxt className=\"pet-desc\" txt={ pet.desc } />\r\n                            {/* <p className=\"pet-desc\">{ pet.desc }</p> */ }\r\n                            <ul className=\"pet-info-list clean-list\">\r\n                                <section className=\"left-info-list\">\r\n                                    <li className=\"flex align-center\">\r\n                                        <FontAwesomeIcon icon={ faCalendar } />\r\n                                        <p>\r\n                                            {/* Age: {(pet.age === 1) ? pet.age + ' year old' : pet.age + ' years old'} */ }\r\n                                            { pet.age + ' ' + pet.type }\r\n                                        </p>\r\n                                    </li>\r\n                                    <li className=\"flex align-center\">\r\n                                        <FontAwesomeIcon icon={ faVenusMars } />\r\n                                        <p>\r\n                                            Gender: { pet.gender }\r\n                                        </p>\r\n                                    </li>\r\n                                    <li className=\"flex align-center\">\r\n                                        <FontAwesomeIcon icon={ faCat } />\r\n                                        <p>\r\n                                            Breed: { pet.breed }\r\n                                        </p>\r\n                                    </li>\r\n                                </section>\r\n                                <section className=\"right-info-list\">\r\n                                    <li className=\"flex align-center\">\r\n                                        <FontAwesomeIcon icon={ faSyringe } />\r\n                                        <p>\r\n                                            Vaccinated: { pet.vaccine ? 'yes' : 'no' }\r\n                                        </p>\r\n                                    </li>\r\n                                    <li className=\"flex align-center\">\r\n                                        <FontAwesomeIcon icon={ faStethoscope } />\r\n                                        <p>\r\n                                            Spayed/Neutered: { pet.neuterSpayed ? 'yes' : 'no' }\r\n                                        </p>\r\n                                    </li>\r\n                                    <li className=\"flex align-center\">\r\n                                        <SportsIcon />\r\n                                        <p>\r\n                                            Trained: { pet.trained ? 'yes' : 'no' }\r\n                                        </p>\r\n                                    </li>\r\n                                </section>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"adopt-modal-container flex column\">\r\n                        <div className=\"flex align-center\">\r\n                            <Binoculars className=\"binoculars\" />\r\n                            <span className=\"adoption-time adopt-sign\">{ 'Looking for    a home for ' + utilService.timeSince(pet.addedAt) }</span>\r\n                        </div>\r\n                        <div className=\"flex align-center\">\r\n                            <ThumbUpIcon className=\"thumb-up\" />\r\n                            <span className=\"adoption-likes adopt-sign\">{ 'Liked by ' + pet.likes + ' people!' }</span>\r\n                        </div>\r\n                        <div className=\"flex align-center\">\r\n                            <Paw className=\"paw\" />\r\n                            <span className=\"adoption-time adopt-sign paw-last\">{ pet.name }is waiting for you</span>\r\n                        </div>\r\n                        <button className=\"adopt-btn el-btn\" onClick={ () => this.onAdopt() }>{ (this.state.isAttend) ? 'Request sent' : 'Adopt Me' }</button>\r\n                        {/* <span><FontAwesomeIcon icon={faEnvelope} /> {pet.owner.name.split(' ')[0].toLowerCase() + '@gmail.com'}</span> */ }\r\n                        {/* <span><FontAwesomeIcon icon={faWhatsapp} /> 054-2312993</span> */ }\r\n                    </div>\r\n                </div>\r\n                <div className=\"comments-section\">\r\n                    <CommentsCmp pet={ pet } key={ pet._id } />\r\n                </div>\r\n                {/* <button onClick={ () => this.onRemovePet() }>Delete</button> */ }\r\n                <section className=\"google-map section\">\r\n                    <h3 className=\"pet-loc\">Where to find me</h3>\r\n                    <div className=\"pet-location\">\r\n                        <RoomOutlinedIcon />\r\n                        { pet.owner.loc.address }\r\n                    </div>\r\n                    {/* <span>{ pet.owner.loc.address }</span> */ }\r\n                    <GoogleMap loc={ pet.owner.loc } />\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.userModule.users,\r\n        pets: state.petModule.pets,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    toggleLike,\r\n    loadPets,\r\n    loadUsers,\r\n    newAdoptRequest,\r\n    onExplore\r\n}\r\n\r\nexport const PetDetails = connect(mapStateToProps, mapDispatchToProps)(_PetDetails)\r\n\r\n","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\actions\\petActions.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\actions\\userActions.js",["163"],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\petService.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\socketService.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\systemReducer.js",["164"],"const initialState = {\r\n  isLoading: false,\r\n  onExplore: false,\r\n  isShowSearch:false\r\n};\r\n\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SHOW_SEARCH':\r\n      return { ...state, isShowSearch: true }\r\n    case 'NOT_SHOW_SEARCH':\r\n      return { ...state, isShowSearch: false }\r\n    case 'SHOW_SEARCH':\r\n      return { ...state, isShowSearch: !state.isShowSearch }\r\n    case 'ON_EXPLORE':\r\n      return { ...state, onExplore: true }\r\n    case 'ON_HOME':\r\n      return { ...state, onExplore: false }\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\petReducer.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\PetList.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\HomepagePreview.jsx",["165","166"],"import { PetPreview } from '../cmps/PetPreview.jsx'\r\nimport { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport { loadPets, addPet } from '../store/actions/petActions'\r\n\r\nclass _HomepagePreview extends React.Component {\r\n\r\n    state = {\r\n        likedPets: [],\r\n        mostWaitingPets: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadPets()\r\n        this.setLikedPets()\r\n        this.setMostWaitingPets()\r\n    }\r\n\r\n    setLikedPets = () => {\r\n        let likedPets = [...this.props.pets]\r\n        likedPets.sort((a, b) => {\r\n            if (a.likes > b.likes) {\r\n                return -1\r\n            }\r\n            if (a.likes < b.likes) {\r\n                return 1\r\n            }\r\n        })\r\n        likedPets.splice(4)\r\n        this.setState({ likedPets })\r\n    }\r\n\r\n    setMostWaitingPets = () => {\r\n        let mostWaitingPets = [...this.props.pets]\r\n        mostWaitingPets.sort((a, b) => {\r\n            if (b.addedAt > a.addedAt) {\r\n                return -1\r\n            }\r\n            if (a.addedAt < b.addedAt) {\r\n                return 1\r\n            }\r\n        })\r\n        mostWaitingPets.splice(4)\r\n        this.setState({ mostWaitingPets })\r\n    }\r\n\r\n    render() {\r\n        const { likedPets, mostWaitingPets } = this.state\r\n        if (!likedPets.length) return <h1>loading</h1>\r\n        if (!mostWaitingPets.length) return <h1>loading</h1>\r\n\r\n        return (\r\n            <>\r\n                <section className=\"type-cards preview-homepage\">\r\n                    <h2 className=\"type-cards-title\">Waiting long time to adopt</h2>\r\n                    <div className=\"preview-cards\">\r\n                        { mostWaitingPets.map(previewPet => {\r\n                            return <PetPreview pet={ previewPet } key={ previewPet._id } />\r\n                        }) }\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"type-cards preview-homepage\">\r\n                    <h2 className=\"type-cards-title\">Most Liked Pets</h2>\r\n                    <div className=\"preview-cards\">\r\n                        { likedPets.map(previewPet => {\r\n                            return <PetPreview pet={ previewPet } key={ previewPet._id } />\r\n                        }) }\r\n                    </div>\r\n                </section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        homePreviewPets: state.petModule.homePreviewPets\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    loadPets,\r\n    addPet,\r\n}\r\n\r\nexport const HomepagePreview = connect(mapStateToProps, mapDispatchToProps)(_HomepagePreview)","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\FilterDynamic.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\LongTxt.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\CommentsCmp.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\HeartLike.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\GoogleMap.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\PetPreview.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\userService.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\asyncStorageService.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\PetFilter.jsx",["167"],"import magnifyingGlass from '../assets/img/svg/magnifying-glass.svg' // relative path to image \r\nimport { withRouter } from 'react-router-dom'\r\nimport React from 'react'\r\nimport { FilterSelect } from './FilterSelect'\r\n\r\n\r\n\r\nclass _PetFilter extends React.Component {\r\n\r\n    state = {\r\n        filterBy: {\r\n            gender: '',\r\n            type: '',\r\n            age: '',\r\n            size: '',\r\n            location: ''\r\n        },\r\n        toggleSelect: {\r\n            gender: false,\r\n            type: false,\r\n            age: false,\r\n            size: false,\r\n        }\r\n    }\r\n\r\n    handleChangeInput = ({ target }) => {\r\n        const { name, value } = target\r\n        const { filterBy } = this.state\r\n        this.setState({ filterBy: { ...filterBy, [name]: value } })\r\n    }\r\n\r\n    handleChange = (value, name) => {\r\n\r\n\r\n        const { filterBy } = this.state\r\n        this.setState({\r\n            filterBy: {\r\n                ...filterBy,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmitFilter = () => {\r\n        const query = new URLSearchParams(this.state.filterBy)\r\n        this.props.history.push(`/explore/?${query.toString()}`)\r\n    }\r\n\r\n    onToggleSelect = (by) => {\r\n\r\n        const { toggleSelect } = this.state\r\n        this.setState({\r\n            toggleSelect: {\r\n                ...toggleSelect,\r\n                [by]: !toggleSelect[by]\r\n            }\r\n        })\r\n    }\r\n\r\n    setOptions = () => {\r\n        const options = {\r\n            size: ['small', 'medium', 'big'],\r\n            type: ['cat', 'dog', 'rabbit', 'dog', 'parrot', 'hamster'],\r\n            gender: ['male', 'female'],\r\n            age: ['young', 'adult', 'senior']\r\n        }\r\n        return options\r\n    }\r\n\r\n    render() {\r\n        const options = this.setOptions()\r\n        const sizeOptions = ['small', 'medium', 'big']\r\n        const { gender, age, type, location, size } = this.state.filterBy\r\n        const { toggleSelect } = this.state\r\n\r\n        return (\r\n\r\n            <section className='pet-filter'>\r\n                <div className=\"filter-select pet-select\">\r\n                    <label >Pet</label>\r\n                    <label onClick={ () => this.onToggleSelect('type') } className=\"select-label\">\r\n                        <label >{ type }{ !type && 'any' }</label>\r\n                        { toggleSelect.type && <FilterSelect key={ type } handleChange={ this.handleChange } options={ options.type } name=\"type\" /> }\r\n                    </label>\r\n\r\n                </div>\r\n                <div className=\"filter-select gender-select\">\r\n                    <label >Gender</label>\r\n                    <label onClick={ () => this.onToggleSelect('gender') } className=\"select-label\">\r\n                        <label >{ gender }{ !gender && 'any' }</label>\r\n                        { toggleSelect.gender && <FilterSelect key={ gender } handleChange={ this.handleChange } options={ options.gender } name=\"gender\" /> }\r\n                    </label>\r\n\r\n\r\n                </div>\r\n                <div className=\"filter-select age-select\">\r\n                    <label >Age</label>\r\n                    <label onClick={ () => this.onToggleSelect('age') } className=\"select-label\">\r\n                        <label >{ age }{ !age && 'any' }</label>\r\n                        { toggleSelect.age && <FilterSelect key={ age } handleChange={ this.handleChange } options={ options.age } name=\"age\" /> }\r\n                    </label>\r\n\r\n                </div>\r\n                <div className=\"filter-select size-select\">\r\n                    <label >Size</label>\r\n                    <label onClick={ () => this.onToggleSelect('size') } className=\"select-label\">\r\n                        <label >{ size }{ !size && 'any' }</label>\r\n                        { toggleSelect.size && <FilterSelect key={ size } handleChange={ this.handleChange } options={ options.size } name=\"size\" /> }\r\n                    </label>\r\n\r\n\r\n\r\n                </div>\r\n                <div className=\"filter-select location-select\">\r\n                    <label className=\"location-label\">Location</label>\r\n                    <input placeholder=\"Enter location\" className='location-select' value={ location } onChange={ this.handleChangeInput } name=\"location\"  ></input>\r\n                </div>\r\n\r\n\r\n\r\n                <button className=\"search-btn filter-select\" onClick={ this.onSubmitFilter }>\r\n                    <img className=\"filter-search\" src={ magnifyingGlass } alt=\"glass\" />\r\n                </button>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport const PetFilter = withRouter(_PetFilter)","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\FilterSelect.jsx",["168"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PetFilter } from './PetFilter'\r\n\r\n\r\nexport class _FilterSelect extends React.Component {\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        const { options, name, handleChange } = this.props\r\n\r\n        return (\r\n            <div  className={'select-modal'} >\r\n                {options.map(option => {\r\n                    return <option  onClick={() => handleChange(option, name)} >{option}</option>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const FilterSelect = connect(mapStateToProps, mapDispatchToProps)(_FilterSelect)",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":6,"column":10,"nodeType":"175","messageId":"176","endLine":6,"endColumn":29},{"ruleId":"173","severity":1,"message":"177","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":18},{"ruleId":"173","severity":1,"message":"178","line":8,"column":10,"nodeType":"175","messageId":"176","endLine":8,"endColumn":20},{"ruleId":"173","severity":1,"message":"179","line":7,"column":8,"nodeType":"175","messageId":"176","endLine":7,"endColumn":23},{"ruleId":"173","severity":1,"message":"180","line":58,"column":17,"nodeType":"175","messageId":"176","endLine":58,"endColumn":30},{"ruleId":"173","severity":1,"message":"181","line":58,"column":42,"nodeType":"175","messageId":"176","endLine":58,"endColumn":48},{"ruleId":"173","severity":1,"message":"182","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":14},{"ruleId":"173","severity":1,"message":"183","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":12},{"ruleId":"173","severity":1,"message":"184","line":9,"column":10,"nodeType":"175","messageId":"176","endLine":9,"endColumn":15},{"ruleId":"185","severity":1,"message":"186","line":121,"column":41,"nodeType":"187","endLine":121,"endColumn":86},{"ruleId":"173","severity":1,"message":"188","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":23},{"ruleId":"173","severity":1,"message":"189","line":110,"column":11,"nodeType":"175","messageId":"176","endLine":110,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":13,"column":5,"nodeType":"192","messageId":"193","endLine":14,"endColumn":61},{"ruleId":"194","severity":1,"message":"195","line":21,"column":31,"nodeType":"196","messageId":"197","endLine":21,"endColumn":33},{"ruleId":"194","severity":1,"message":"195","line":35,"column":37,"nodeType":"196","messageId":"197","endLine":35,"endColumn":39},{"ruleId":"173","severity":1,"message":"198","line":72,"column":15,"nodeType":"175","messageId":"176","endLine":72,"endColumn":26},{"ruleId":"173","severity":1,"message":"199","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":19},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'SocketsNotification' is defined but never used.","Identifier","unusedVar","'rightArrow' is defined but never used.","'petService' is defined but never used.","'magnifyingGlass' is defined but never used.","'isFilterShown' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'Link' is defined but never used.","'logo' is defined but never used.","'store' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'socketService' is defined but never used.","'action' is assigned a value but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'sizeOptions' is assigned a value but never used.","'PetFilter' is defined but never used.","no-global-assign","no-unsafe-negation"]