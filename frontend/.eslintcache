[{"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\index.js":"1","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\store.js":"4","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\App.jsx":"5","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\PetApp.jsx":"6","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\Profile.jsx":"7","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\Explore.jsx":"8","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\Footer.jsx":"9","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\SocketsNotification.jsx":"10","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\Header.jsx":"11","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\LoginSignup.jsx":"12","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\PetDetails.jsx":"13","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\index.js":"14","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\actions\\petActions.js":"15","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\actions\\userActions.js":"16","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\petService.js":"17","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\utilService.js":"18","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\socketService.js":"19","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\userReducer.js":"20","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\systemReducer.js":"21","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\petReducer.js":"22","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\PetList.jsx":"23","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\HomepagePreview.jsx":"24","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\FilterDynamic.jsx":"25","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\LongTxt.jsx":"26","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\CommentsCmp.jsx":"27","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\HeartLike.jsx":"28","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\GoogleMap.jsx":"29","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\PetPreview.jsx":"30","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\userService.js":"31","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\httpService.js":"32","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\asyncStorageService.js":"33","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\PetFilter.jsx":"34","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\FilterSelect.jsx":"35"},{"size":937,"mtime":1622116980749,"results":"36","hashOfConfig":"37"},{"size":5201,"mtime":1622109037239,"results":"38","hashOfConfig":"37"},{"size":377,"mtime":1622109037238,"results":"39","hashOfConfig":"37"},{"size":439,"mtime":1622123103015,"results":"40","hashOfConfig":"37"},{"size":1101,"mtime":1623190029440,"results":"41","hashOfConfig":"37"},{"size":7279,"mtime":1623179835078,"results":"42","hashOfConfig":"37"},{"size":14419,"mtime":1623199214086,"results":"43","hashOfConfig":"37"},{"size":4295,"mtime":1623179835076,"results":"44","hashOfConfig":"37"},{"size":804,"mtime":1622919027463,"results":"45","hashOfConfig":"37"},{"size":2583,"mtime":1623196187173,"results":"46","hashOfConfig":"37"},{"size":5952,"mtime":1623179835069,"results":"47","hashOfConfig":"37"},{"size":4454,"mtime":1623165230887,"results":"48","hashOfConfig":"37"},{"size":13313,"mtime":1623225168659,"results":"49","hashOfConfig":"37"},{"size":319,"mtime":1622316979767,"results":"50","hashOfConfig":"37"},{"size":2203,"mtime":1623163454965,"results":"51","hashOfConfig":"37"},{"size":4242,"mtime":1623196284443,"results":"52","hashOfConfig":"37"},{"size":2228,"mtime":1622979025036,"results":"53","hashOfConfig":"37"},{"size":2198,"mtime":1622973523568,"results":"54","hashOfConfig":"37"},{"size":1553,"mtime":1623177505583,"results":"55","hashOfConfig":"37"},{"size":1541,"mtime":1623178481784,"results":"56","hashOfConfig":"37"},{"size":735,"mtime":1622909244691,"results":"57","hashOfConfig":"37"},{"size":2152,"mtime":1623055339979,"results":"58","hashOfConfig":"37"},{"size":369,"mtime":1622900286718,"results":"59","hashOfConfig":"37"},{"size":2636,"mtime":1623052332372,"results":"60","hashOfConfig":"37"},{"size":1429,"mtime":1623011886571,"results":"61","hashOfConfig":"37"},{"size":905,"mtime":1623011886574,"results":"62","hashOfConfig":"37"},{"size":4788,"mtime":1623165195205,"results":"63","hashOfConfig":"37"},{"size":2639,"mtime":1622988521644,"results":"64","hashOfConfig":"37"},{"size":1506,"mtime":1622608313977,"results":"65","hashOfConfig":"37"},{"size":1862,"mtime":1623179207876,"results":"66","hashOfConfig":"37"},{"size":3936,"mtime":1623225209441,"results":"67","hashOfConfig":"37"},{"size":1134,"mtime":1623163454963,"results":"68","hashOfConfig":"37"},{"size":3495,"mtime":1623165245490,"results":"69","hashOfConfig":"37"},{"size":4593,"mtime":1623179835071,"results":"70","hashOfConfig":"37"},{"size":752,"mtime":1623159534375,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"aanmm",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\index.js",[],["151","152"],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\store.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\App.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\PetApp.jsx",["153"],"import { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport { loadPets, addPet } from '../store/actions/petActions'\r\nimport { onHome, showSearch, hideSearch } from '../store/actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\nimport { FilterDynamic } from '../cmps/FilterDynamic'\r\nimport { HomepagePreview } from '../cmps/HomepagePreview'\r\nimport rightArrow from '../assets/img/svg/arrow-right.png'\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport { ReactComponent as Loader } from '../assets/img/loaders/loader_3.svg' \r\nimport { ReactComponent as Paw } from '../assets/img/svg/paw.svg'\r\nimport ContactMailOutlinedIcon from '@material-ui/icons/ContactMailOutlined';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n\r\nclass _PetApp extends React.Component {\r\n\r\n    async componentDidMount() {\r\n        window.scroll(0, 0)\r\n        this.props.hideSearch()\r\n        this.props.onHome()\r\n        await this.props.loadPets()\r\n    }\r\n\r\n    render() {\r\n        const { pets } = this.props\r\n        if (pets.length === 0) return <Loader />\r\n        return (\r\n            <section className=\"main-container\">\r\n                <section className=\"hero full\">\r\n                    <div className=\"hero-content\">\r\n                        <FilterDynamic />\r\n\r\n                        <h1>Find your</h1>\r\n                        <h1> best friend</h1>\r\n                    </div>\r\n                </section>\r\n                <div className=\"type-cards\">\r\n                    <h2 className=\"type-cards-title\">Our sweet pet types</h2>\r\n                    <div className=\"type-img\">\r\n                        <div>\r\n                            <Link to={`/explore/?gender=&age=&type=dog&location=&size=`} >\r\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622205405/dogs/dog3/frnach-dog3_npdovb.jpg\" alt=\"card\" />\r\n                                <h4>Dogs</h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link to={`/explore/?gender=&age=&type=cat&location=&size=`} >\r\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622203804/petMe/cats/cat_nnrk1h.jpg\" alt=\"card\" />\r\n                                <h4>Cats</h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link to={`/explore/?gender=&age=&type=rabbit&location=&size=`} >\r\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622206572/petMe/rabbit/rrabit3/1_2_chadja.jpg\" alt=\"card\" />\r\n                                <h4>Rabbits</h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link to={`/explore/?gender=&age=&type=parrot&location=&size=`} >\r\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622213930/petMe/parrot/1_3_s1zdqk.jpg\" alt=\"card\" />\r\n                                <h4>Parrots</h4>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <section className=\"homepage-section-info\">\r\n                    <div className=\"content\">\r\n                        <div>\r\n                            <div className=\"info-title-icon\">\r\n                                <h2>Filter down to your perfect fit</h2>\r\n                                {/* <img className=\"info-icons\" src={magnifyingGlass} alt=\"glass\" /> */}\r\n                                <SearchOutlinedIcon className=\"info-icons\" />\r\n                            </div>\r\n                            <p> Personalize your search with filters like gender,\r\n                            type, size or a pool to get exactly what you want.\r\n                            {/* <img className=\"arrow-icons\" src={rightArrow} alt=\"\" /> */}\r\n                            </p>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"info-title-icon\">\r\n                                <h2>Dig into the details</h2>\r\n                                <InfoOutlinedIcon className=\"info-icons\"/>\r\n                            </div>\r\n                            <p> Check out the photos and view pet information.\r\n                                Next, read user reviews and comments about the pet and its owner.\r\n                                {/* <img className=\"arrow-icons\" src={rightArrow} alt=\"\" /> */}\r\n                                </p>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"info-title-icon\">\r\n                                <h2>Contact pet owners</h2>\r\n                                {/* <img className=\"info-icons\" src={contact} alt=\"glass\" /> */}\r\n                                <ContactMailOutlinedIcon className=\"info-icons\"/>\r\n                            </div>\r\n                            <p>  Once you have decided which pet you would like to adopt, contact the pet owners and keep your fingers crossed.\r\n                            {/* <img className=\"arrow-icons\" src={rightArrow} alt=\"\" /> */}\r\n                            </p>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"info-title-icon\">\r\n                                <h2>Adopt a friend!</h2>\r\n                                {/* <img className=\"info-icons\" src={paw} alt=\"glass\" /> */}\r\n                                <Paw className=\"info-icons\" />\r\n                            </div>\r\n                            <p> In a quick and easy process you can adopt a pet that will become your new companion for life. Join us for a fun journey! \r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <HomepagePreview pets={this.props.pets} />\r\n                <section className=\"homepage-about main-container full\">\r\n                    <div className=\"blur full\">\r\n                        <div className=\"about-content flex column\">\r\n                            <h2>Our vision</h2>\r\n                            <p>PetMe is dedicated to saving the lives of animals in need. We improve animal welfare in communities through adoption, education, and providing resources for people and pets.</p>\r\n                            <p>We strive for a world where every companion animal has a safe and loving home and their family has the knowledge and resources needed to give them the life they deserve.</p>\r\n                            <img className=\"welcome-logo\" src=\"https://petcolove.org/wp-content/uploads/2018/08/welcome-to-the-family-web.png\" alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        pets: state.petModule.pets\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadPets,\r\n    addPet,\r\n    onHome,\r\n    showSearch,\r\n    hideSearch\r\n}\r\n\r\nexport const PetApp = connect(mapStateToProps, mapDispatchToProps)(_PetApp)","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\Profile.jsx",["154"],"import AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import StarRateIcon from '@material-ui/icons/StarRate'\r\n// import { store } from 'react-notifications-component'\r\n// import { petService } from '../services/petService'\r\n// import { userService } from '../services/userService'\r\nimport Loader from '../assets/img/loaders/loader_3.svg' // relative path to image \r\nimport Pin from '../assets/img/svg/pin.svg' // relative path to image \r\nimport { onExplore } from '../store/actions/userActions'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { utilService } from '../services/utilService'\r\nimport { loadUsers, login, logout, removeUser, signup, approveAdopt, getUser } from '../store/actions/userActions'\r\nimport { loadPets } from '../store/actions/petActions'\r\nimport { socketService } from '../services/socketService'\r\nimport { userService } from '../services/userService'\r\n\r\n\r\nclass _Profile extends Component {\r\n    state = {\r\n        userPets: [],\r\n        userRequests: [],\r\n        isGotRequests: false,\r\n        isRemoveReq: false,\r\n        reqBtnTxt: '',\r\n        adoptionRequestsInfo: [],\r\n        loggedInUser: null,\r\n        newLiveRequest: null,\r\n        newLiveApprove: null,\r\n        updatedPets: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        this.onLoadPets()\r\n        this.socketListeners()\r\n        this.loadLoggedInUser()\r\n        this.props.onExplore()\r\n        socketService.on('adopt-request-owner-data', (data) => {\r\n            console.log('im on profile')\r\n            this.setState({ IncomingLiveData: data })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    loadLoggedInUser = () => {\r\n        userService.updateLoggedInUser(this.props.loggedInUser._id);\r\n        // const loggedInUser = this.props.getUser(this.props.loggedInUser)\r\n        // this.setState({ loggedInUser: this.props.loggedInUser })\r\n    }\r\n\r\n    onLoadPets = () => {\r\n        this.props.loadPets()\r\n            .then(() => {\r\n                //find why pets dont load \r\n                const userPets = this.props.loggedInUser.pets.map(userPet => {\r\n                    return this.props.pets.filter(pet => userPet._id === pet._id)\r\n                }).flatMap(e => e)\r\n                this.setState({ userPets })\r\n            })\r\n\r\n\r\n    }\r\n\r\n    socketListeners = () => {\r\n        socketService.on('adopt-request-owner-data', (data) => {\r\n            console.log('recived data in profile')\r\n            this.setState({ newLiveRequest: data })\r\n\r\n        })\r\n        socketService.on('adopt-request-approved-data', (data) => {\r\n            this.setState({ newLiveApprove: data.pet })\r\n\r\n        })\r\n    }\r\n\r\n\r\n    onLoadRequests = () => {\r\n        const adoptionRequestsInfo = this.props.users.map(user => {\r\n            return user.pets.map(pet => {\r\n                return pet.adoptQue.map(request => {\r\n                    if (request.userId === this.props.loggedInUser._id) {\r\n                        return { user, pet: { ...pet, userId: user._id } }\r\n                    }\r\n                    return undefined\r\n                }).filter(e => e)\r\n            }).flatMap(e => e)\r\n        });\r\n        this.setState({ adoptionRequestsInfo })\r\n    }\r\n\r\n    removeReq = (ev) => {\r\n    }\r\n    toggleRemoveReq = () => {\r\n    }\r\n    reqBtnTxt = (txt) => {\r\n        this.setState({ reqBtnTxt: txt })\r\n    }\r\n\r\n    approveAdopt = (pet, req, loggedInUser, idx) => {\r\n        const msg = loggedInUser.fullname + ' just approved your request to adopt ' + pet.name\r\n        const data = { pet, req, loggedInUser, idx, msg }\r\n        this.props.approveAdopt(data)\r\n\r\n        // socketService.emit('aprove-adopt', data)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        this.loadLoggedInUser()\r\n        const { loggedInUser } = this.props\r\n        const { userPets } = this.state\r\n        console.log(loggedInUser, userPets)\r\n        let newLiveRequest = null\r\n        let newLiveApprove = null\r\n        if (this.state.newLiveRequest) {\r\n            const { newRequest } = this.state.newLiveRequest\r\n            newLiveRequest = newRequest\r\n        }\r\n        if (!loggedInUser) return <img src={ Loader } alt=\"loadnig\" />\r\n        if (loggedInUser.pets.legnth > 0 && userPets.length < 1) return <img src={ Loader } alt=\"loadnig\" />\r\n        return (\r\n\r\n            <section className=\"main-profile main-container\">\r\n                <section className=\"user-card\">\r\n                    <div className=\"profile-img\">\r\n                        {/* <button onClick={() => cloudinaryService.uploadImg()}>U</button> */ }\r\n                        <img src={ loggedInUser.imgUrl } alt={ <AccountCircleOutlinedIcon /> } />\r\n                    </div>\r\n                    <section className=\"user-info\">\r\n                        <h1>{ loggedInUser.fullname } </h1>\r\n                        <h4>{ loggedInUser.username } </h4>\r\n                        <h4 className=\"italic\">\"{ loggedInUser.title }\"</h4>\r\n                        <div className=\"location-info\">\r\n                            <img src={ Pin } alt=\"location info\" />\r\n                            <div>{ loggedInUser.loc.address }</div>\r\n                        </div>\r\n                        <div className=\"user-rate\">\r\n                            <Rating name=\"disabled\" value={ loggedInUser.rating ? loggedInUser.rating : loggedInUser.reviews[0]?.rate } disabled />\r\n                        </div>\r\n                    </section>\r\n                    {/* <div><button className=\"logout\">Logout</button></div> */ }\r\n                </section>\r\n\r\n                {/* <section className={ this.state.isGotRequests ? 'profile-pets-container flex' : 'profile-pets-container hide' }> */ }\r\n                <section className=\"profile-pets-container flex\" >\r\n\r\n                    <div className=\"user-pets\">\r\n                        <h1>My pets</h1>\r\n                        { userPets.map((pet, idx) => {\r\n                            return (\r\n                                <div className=\"adopt-card flex\" key={ utilService.makeId(6) }>\r\n                                    <div className=\"adopt-card-info\">\r\n\r\n                                        <div className=\"pet-header flex\">\r\n                                            <div className=\"pet-header-txt flex column\">\r\n                                                <h3>{ pet.name }</h3>\r\n                                                <span>Added: { utilService.timeSince(pet.addedAt, 'ago') }</span>\r\n                                                <h4>Request Queue: </h4>\r\n                                            </div>\r\n                                            <div className=\"pet-img-box flex align-center\">\r\n                                                <img src={ pet.imgUrls[0] } alt=\"pet\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <section className=\"adopt-table\">\r\n                                            <table className=\"pet-table-card\">\r\n                                                <tbody className=\"table-body\" key={ utilService.makeId(6) }>\r\n                                                    { loggedInUser.pets[idx] && loggedInUser.pets[idx].adoptQue.map(req => {\r\n                                                        return (\r\n                                                            <div className=\"adopt-que-card flex space-between\" key={ utilService.makeId(6) }>\r\n                                                                <tr className=\"flex column\">\r\n                                                                    <td className=\"req-name\">{ req.fullname }</td>\r\n                                                                    <td className=\"req-msg\">{ req.message }</td>\r\n                                                                    <td className=\"req-time\">{ utilService.timeSince(req.date, 'ago') }</td>\r\n                                                                </tr>\r\n                                                                <button onClick={ () => this.approveAdopt(pet, req, loggedInUser, idx) } className=\"aprove-btn\">Approve Adoption</button>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                    }\r\n                                                    { newLiveRequest &&\r\n                                                        <tr key={ utilService.makeId(6) }>\r\n                                                            <td>{ newLiveRequest.fullname }</td>\r\n                                                            <td>{ newLiveRequest.message }</td>\r\n                                                            <td>{ utilService.timeSince(newLiveRequest.date, 'ago') }</td>\r\n                                                            <td><button onClick={ () => this.approveAdopt(pet, newLiveRequest, loggedInUser, idx) } className=\"aprove-btn\">Aprove</button></td>\r\n                                                        </tr>\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </section>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }) }\r\n                    </div>\r\n                    <div className=\"user-requests hide\">\r\n                        <h1>My requests</h1>\r\n                        <div className=\"request-list flex column\">\r\n                            { userPets.map((pet, idx) => {\r\n                                return (\r\n                                    loggedInUser.pets[idx]\r\n                                        .adoptQue.map(req => {\r\n                                            return (\r\n                                                <div className=\"request-card flex column\" key={ utilService.makeId(6) }>\r\n                                                    <div className=\"main-card-section\">\r\n                                                        {/* <img src={ pet.imgUrl[0] } alt=\"pet-img\" className=\"pet-img\" /> */ }\r\n                                                        <div className=\"request-info\">\r\n                                                            <div className=\"req-owner-name flex\">\r\n                                                                <h3>From:</h3>\r\n                                                                <span className=\"owner-name\">{ req.fullname }</span>\r\n                                                            </div>\r\n                                                            <div className=\"req-pet-info flex\">\r\n                                                                <h3 className=\"about-pet\">Messege:</h3>\r\n                                                                <span className=\"pet-name\">{ req.message }</span>\r\n                                                            </div>\r\n                                                            <div className=\"req-time\">{ utilService.timeSince(req.date, 'ago') }</div>\r\n                                                        </div>\r\n                                                        <div className=\"request-statue\">\r\n                                                            <button onClick={ () => this.toggleRemoveReq }\r\n                                                                // onMouseOver={ () => this.hoverRemoveReq }\r\n                                                                onMouseOver={ () => this.reqBtnTxt('Delete this Request') }\r\n                                                                onMouseOut={ () => this.reqBtnTxt('Requested/Aprove') }\r\n                                                                className={ this.state.isRemoveReqHover ? 'remove-request hovering' : 'remove-request' }>\r\n                                                                {/* ⬆ Hover will reveal 'Delete this Request' and change the color */ }\r\n                                                                {/* ⬇ change Requested/Aprove with adoptQue.status */ }\r\n                                                                {/* { this.state.isRemoveReqHover ? 'Delete this Request' : 'Requested/Aprove' } */ }\r\n                                                                { this.state.reqBtnTxt ? this.state.reqBtnTxt : 'Requested/Aprove' }\r\n                                                                {/* <div className={ this.state.isRemoveReq ? 'remove' : 'remove hide' }>\r\n                                                <button onClick={ (event) => this.removeReq(event) }>Yes</button>\r\n                                                <button onClick={ (event) => this.removeReq(event) }>No</button>\r\n                                            </div> */}\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/* for commenting back to owner - opan bottom modal */ }\r\n                                                    <div className=\"card-extention\"></div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                )\r\n                            }) }\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        isLoading: state.systemModule.isLoading,\r\n        pets: state.petModule.pets,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    removeUser,\r\n    loadUsers,\r\n    loadPets,\r\n    onExplore,\r\n    approveAdopt,\r\n    getUser\r\n}\r\n\r\nexport const Profile = connect(mapStateToProps, mapDispatchToProps)(_Profile)\r\n","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\Explore.jsx",["155"],"import { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport { loadPets } from '../store/actions/petActions'\r\nimport { onExplore, showSearch } from '../store/actions/userActions'\r\nimport { PetList } from '../cmps/PetList'\r\nimport userIcon from '../assets/img/loaders/loader_2.svg' // relative path to image\r\n// import magnifyingGlass from '../assets/img/svg/magnifying-glass.svg' // relative path to image \r\n\r\n\r\nclass _Explore extends React.Component {\r\n    state = {\r\n        isFilterShown: false,\r\n        filterBy: null,\r\n        sortBy: '',\r\n        pets: [],\r\n        isLoading:false\r\n    }\r\n    async componentDidMount() {\r\n        window.scroll(0, 0)\r\n        this.props.onExplore()\r\n        this.props.showSearch()\r\n        await this.onSetFilter()\r\n        await this.props.loadPets(this.state.filterBy)\r\n        // this.setState({ pets: this.props.pets })\r\n        this.setState({ isLoading: true })\r\n\r\n\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        console.log(\"componentDidUpdate\")\r\n        console.log(this.state.filterBy);\r\n        const query = new URLSearchParams(this.state.filterBy).toString()\r\n        // console.log(\"🚀 ~ file: Explore.jsx ~ line 30 ~ _Explore ~ componentDidUpdate ~ query\", query)\r\n        // if (query === 'gender=&type=cat&age=&size=&location=') {\r\n        //     console.log('in');\r\n            // await this.props.loadPets()\r\n        //     this.setState({ pets: this.props.pets })\r\n        // }\r\n    }\r\n\r\n    onSetSort = () => {\r\n        const { filterBy, sortBy } = this.state\r\n        let filter = {\r\n            ...filterBy,\r\n            sort: sortBy\r\n        }\r\n        this.props.loadPets(filter)\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ sortBy: event.target.value },\r\n            () => {\r\n                this.onSetSort()\r\n            })\r\n    }\r\n\r\n    onSetFilter = () => {\r\n        const search = new URLSearchParams(this.props.location.search)\r\n        let filterBy = {\r\n            gender: search.get('gender'),\r\n            type: search.get('type'),\r\n            age: search.get('age'),\r\n            size: search.get('size'),\r\n            location: search.get('location'),\r\n        }\r\n        this.setState({ filterBy })\r\n    }\r\n\r\n    onToggleFilter = () => {\r\n        this.setState({ isFilterShown: !this.state.isFilterShown }\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log('render');\r\n\r\n        const { pets } = this.props\r\n        const { filterBy,isLoading } = this.state\r\n        if (!pets.length) return <img src={userIcon} alt=\"loading\" />\r\n        if (!filterBy) return <img src={userIcon} alt=\"loading\" />\r\n        if (!isLoading) return <img src={userIcon} alt=\"loading\" />\r\n        return (\r\n            <section className=\"main-container explore-container\">\r\n\r\n                {/* {!isFilterShown && <div className=\"explore-search\">\r\n                    <span onClick={() => this.onToggleFilter()} > Start your search</span>\r\n                    <div className=\"search-btn-explore\">\r\n                        <img className=\"filter-search\" src={ magnifyingGlass } alt=\"glass\" />\r\n                    </div>\r\n                </div>} */}\r\n\r\n\r\n                <div className=\"filter-description\">\r\n                    { !filterBy.type && <h1 >Our pets</h1> }\r\n                    { filterBy.type && <h1>Our <span> { filterBy.gender } { filterBy.size }  { filterBy.type }s</span>  </h1> }\r\n\r\n                    <div className=\"sort-form\">\r\n                        <label>Sort By</label>\r\n                        <select className=\"select-sort\" value={this.state.sortBy} onChange={this.handleChange}>\r\n                            <option value=\"createdAt\">Date</option>\r\n                            <option value=\"name\">Name</option>\r\n                            <option value=\"likes\">Likes</option>\r\n                        </select>\r\n\r\n                    </div>\r\n                </div>\r\n                < PetList pets={ pets } />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        pets: state.petModule.pets,\r\n        inExplore: state.systemModule.onExplore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadPets, onExplore, showSearch\r\n}\r\n\r\nexport const Explore = connect(mapStateToProps, mapDispatchToProps)(_Explore)\r\n","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\Footer.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\SocketsNotification.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\Header.jsx",["156","157"],"import userIcon from '../assets/img/header/user.svg' // relative path to image \r\nimport menuIcon from '../assets/img/header/menu.svg' // relative path to image \r\n// import logo from '../assets/img/logo.png' // relative path to image \r\nimport React, { Component } from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions'\r\nimport { socketService } from '../services/socketService'\r\nimport magnifyingGlass from '../assets/img/svg/magnifying-glass.svg' // relative path to image \r\nimport { loadPets } from '../store/actions/petActions'\r\nimport { approveAdoptToOwner } from '../store/actions/userActions'\r\nimport { PetFilter } from './PetFilter'\r\nimport { ReactComponent as Logo } from '../assets/img/svg/logo1.svg'\r\nimport { SocketsNotification } from '../cmps/SocketsNotification'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n\r\n\r\nclass _Header extends Component {\r\n\r\n    state = {\r\n        isProfileShown: false,\r\n        isRequested: false,\r\n        navBackground: false,\r\n        isFilterShown: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('cdm');\r\n        window.addEventListener('click', this.handleClick)\r\n        window.addEventListener('scroll', this.handleScroll)\r\n        socketService.on('sending-new-owner-to-save', () => {\r\n            this.props.approveAdoptToOwner()\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('click', this.handleClick)\r\n        window.removeEventListener('scroll', this.handleScroll)\r\n    }\r\n\r\n    handleScroll = () => {\r\n        this.setState({ isFilterShown: false })\r\n        if (window.pageYOffset > 50) {\r\n            this.setState({ navBackground: true });\r\n        } else {\r\n            this.setState({ navBackground: false });\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (this.state.isProfileShown && window.event.clientY > 80) {\r\n            this.setState({ isProfileShown: false })\r\n        }\r\n    }\r\n\r\n    onLogout = () => {\r\n        this.props.logout(this.props.loggedInUser._id)\r\n    }\r\n\r\n    toggleDropdown = () => {\r\n        this.setState({ isProfileShown: !this.state.isProfileShown })\r\n    }\r\n\r\n    onToggleFilter = () => {\r\n        this.setState({ isFilterShown: !this.state.isFilterShown }\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const { loggedInUser, inExplore, isShowSearch } = this.props\r\n        const { isProfileShown, navBackground, isFilterShown } = this.state\r\n\r\n        return (\r\n            <header className={`main-header ${navBackground && 'nav-white'}  ${!navBackground && 'nav-transparent'} \r\n              main-container     ${isShowSearch && isFilterShown && 'resize-nav'}`}   >\r\n                < nav className=\"header-container\" >\r\n                    <NavLink to=\"/\">\r\n                        <div className=\"logo-container flex\">\r\n                            <Logo className=\"logo\" />\r\n                            <h1 className={`logo-title ${navBackground && 'black'} ${inExplore && 'black'} `}>PetMe</h1>\r\n                        </div>\r\n                    </NavLink>\r\n\r\n                    <section className=\"filter-section\">\r\n                        {isShowSearch && !isFilterShown && <div className=\"explore-search\">\r\n                            <span onClick={() => this.onToggleFilter()} > Start your search</span>\r\n                            {/* <span onClick={() => this.onToggleFilter()} > Start your search</span> */}\r\n                            <SearchIcon className=\"search-btn-explore\" />\r\n                        </div>}\r\n                        {isShowSearch && isFilterShown &&\r\n                            < PetFilter />\r\n                        }\r\n                    </section>\r\n                    <div>\r\n                        {/* <span>{ (this.state.isRequested) ? 'requests' : '' }</span> */}\r\n                        <SocketsNotification />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"right-nav\">\r\n                        <NavLink onClick={() => this.props.loadPets()} className={`explore-btn ${navBackground && 'black'} ${inExplore && 'black'} `}\r\n                            to='/explore/?gender=&age=&type=&location=&size='>\r\n                            Explore</NavLink>\r\n                        <div onClick={() => this.toggleDropdown()} className=\"login-profile\">\r\n                            {isProfileShown && <div className=\"user-dropdown\">\r\n                                <div className=\"dropdown-list\">\r\n                                    {(loggedInUser) && <Link to='/profile' >\r\n                                        <span>Profile</span>\r\n                                    </Link>}\r\n\r\n                                    {(loggedInUser) &&\r\n                                        <a href=\"\" onClick={() => this.onLogout()}>Logout</a>\r\n                                    }\r\n                                    {(!loggedInUser) && <Link to='/login' >\r\n                                        <span>Login</span>\r\n                                    </Link>}\r\n                                </div>\r\n                            </div>}\r\n\r\n                            <img src={menuIcon} alt=\"icon\" />\r\n                            {(!loggedInUser) && <img src={userIcon} alt=\"icon\" />}\r\n                            {(loggedInUser) && <img className=\"profile-icon\" src={loggedInUser.imgUrl} alt=\"icon\" />}\r\n                        </div>\r\n                    </div>\r\n                </nav >\r\n            </header >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        inExplore: state.systemModule.onExplore,\r\n        isShowSearch: state.systemModule.isShowSearch\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout, loadPets, approveAdoptToOwner\r\n}\r\n\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\pages\\PetDetails.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\actions\\petActions.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\petService.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\socketService.js",["158"],"import io from 'socket.io-client'\r\nimport { httpService } from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\nexport const SOCKET_EVENT_ADOPT_REQUEST = 'adopt-request';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false })\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      // console.log('im in socketservice front on')\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb = null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      console.log('im in socketservice front emit')\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  // console.log(socketIsReady)\r\n  return socketService\r\n}\r\n","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\systemReducer.js",["159"],"const initialState = {\r\n  isLoading: false,\r\n  onExplore: false,\r\n  isShowSearch:false\r\n};\r\n\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SHOW_SEARCH':\r\n      return { ...state, isShowSearch: true }\r\n    case 'NOT_SHOW_SEARCH':\r\n      return { ...state, isShowSearch: false }\r\n    case 'SHOW_SEARCH':\r\n      return { ...state, isShowSearch: !state.isShowSearch }\r\n    case 'ON_EXPLORE':\r\n      return { ...state, onExplore: true }\r\n    case 'ON_HOME':\r\n      return { ...state, onExplore: false }\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\store\\reducers\\petReducer.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\PetList.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\HomepagePreview.jsx",["160","161"],"import { PetPreview } from '../cmps/PetPreview.jsx'\r\nimport { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport { loadPets, addPet } from '../store/actions/petActions'\r\n\r\nclass _HomepagePreview extends React.Component {\r\n\r\n    state = {\r\n        likedPets: [],\r\n        mostWaitingPets: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadPets()\r\n        this.setLikedPets()\r\n        this.setMostWaitingPets()\r\n    }\r\n\r\n    setLikedPets = () => {\r\n        let likedPets = [...this.props.pets]\r\n        likedPets.sort((a, b) => {\r\n            if (a.likes > b.likes) {\r\n                return -1\r\n            }\r\n            if (a.likes < b.likes) {\r\n                return 1\r\n            }\r\n        })\r\n        likedPets.splice(4)\r\n        this.setState({ likedPets })\r\n    }\r\n\r\n    setMostWaitingPets = () => {\r\n        let mostWaitingPets = [...this.props.pets]\r\n        mostWaitingPets.sort((a, b) => {\r\n            if (b.addedAt > a.addedAt) {\r\n                return -1\r\n            }\r\n            if (a.addedAt < b.addedAt) {\r\n                return 1\r\n            }\r\n        })\r\n        mostWaitingPets.splice(4)\r\n        this.setState({ mostWaitingPets })\r\n    }\r\n\r\n    render() {\r\n        const { likedPets, mostWaitingPets } = this.state\r\n        if (!likedPets.length) return <h1>loading</h1>\r\n        if (!mostWaitingPets.length) return <h1>loading</h1>\r\n\r\n        return (\r\n            <>\r\n                <section className=\"type-cards preview-homepage\">\r\n                    <h2 className=\"type-cards-title\">Waiting long time to adopt</h2>\r\n                    <div className=\"preview-cards\">\r\n                        { mostWaitingPets.map(previewPet => {\r\n                            return <PetPreview pet={ previewPet } key={ previewPet._id } />\r\n                        }) }\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"type-cards preview-homepage\">\r\n                    <h2 className=\"type-cards-title\">Most Liked Pets</h2>\r\n                    <div className=\"preview-cards\">\r\n                        { likedPets.map(previewPet => {\r\n                            return <PetPreview pet={ previewPet } key={ previewPet._id } />\r\n                        }) }\r\n                    </div>\r\n                </section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        homePreviewPets: state.petModule.homePreviewPets\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    loadPets,\r\n    addPet,\r\n}\r\n\r\nexport const HomepagePreview = connect(mapStateToProps, mapDispatchToProps)(_HomepagePreview)","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\FilterDynamic.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\LongTxt.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\CommentsCmp.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\HeartLike.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\GoogleMap.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\PetPreview.jsx",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\userService.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\services\\asyncStorageService.js",[],"C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\PetFilter.jsx",["162"],"import magnifyingGlass from '../assets/img/svg/magnifying-glass.svg' // relative path to image \r\nimport { withRouter } from 'react-router-dom'\r\nimport React from 'react'\r\nimport { FilterSelect } from './FilterSelect'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n\r\nclass _PetFilter extends React.Component {\r\n\r\n    state = {\r\n        filterBy: {\r\n            gender: '',\r\n            type: '',\r\n            age: '',\r\n            size: '',\r\n            location: ''\r\n        },\r\n        toggleSelect: {\r\n            gender: false,\r\n            type: false,\r\n            age: false,\r\n            size: false,\r\n        },\r\n\r\n    }\r\n\r\n    handleChangeInput = ({ target }) => {\r\n        const { name, value } = target\r\n        const { filterBy } = this.state\r\n        this.setState({ filterBy: { ...filterBy, [name]: value } })\r\n    }\r\n\r\n    handleChange = (value, name) => {\r\n        const { filterBy } = this.state\r\n        this.setState({\r\n            filterBy: {\r\n                ...filterBy,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmitFilter = () => {\r\n        const query = new URLSearchParams(this.state.filterBy)\r\n        if(this.props.loadPets){\r\n            this.props.loadPets()\r\n        }\r\n        this.props.history.push(`/explore/?${query.toString()}`)\r\n    }\r\n\r\n    onToggleSelect = (by) => {\r\n        const { toggleSelect } = this.state\r\n        this.setState({\r\n            toggleSelect: {\r\n                [by]: !toggleSelect[by]\r\n            }\r\n        })\r\n    }\r\n\r\n    setOptions = () => {\r\n        const options = {\r\n            size: ['small', 'medium', 'big'],\r\n            type: ['cat', 'dog', 'rabbit', 'parrot', 'hamster'],\r\n            gender: ['male', 'female'],\r\n            age: ['young', 'adult', 'senior']\r\n        }\r\n        return options\r\n    }\r\n\r\n\r\n    render() {\r\n        const options = this.setOptions()\r\n        // const sizeOptions = ['small', 'medium', 'big']\r\n        const { gender, age, type, location, size } = this.state.filterBy\r\n        const { toggleSelect } = this.state\r\n\r\n        return (\r\n            <section className='pet-filter'>\r\n                <div className=\"filter-select pet-select\">\r\n                    <label >Pet</label>\r\n                    <label onClick={() => this.onToggleSelect('type')} className=\"select-label\">\r\n                        <label >{type}{!type && 'any'}</label>\r\n                        {toggleSelect.type && <FilterSelect key={type} handleChange={this.handleChange} options={options.type} name=\"type\" />}\r\n                    </label>\r\n                </div>\r\n                <div className=\"filter-select gender-select\">\r\n                    <label >Gender</label>\r\n                    <label onClick={() => this.onToggleSelect('gender')} className=\"select-label\">\r\n                        <label >{gender}{!gender && 'any'}</label>\r\n                        {toggleSelect.gender && <FilterSelect key={gender} handleChange={this.handleChange} options={options.gender} name=\"gender\" />}\r\n                    </label>\r\n                </div>\r\n                <div className=\"filter-select age-select\">\r\n                    <label >Age</label>\r\n                    <label onClick={() => this.onToggleSelect('age')} className=\"select-label\">\r\n                        <label >{age}{!age && 'any'}</label>\r\n                        {toggleSelect.age && <FilterSelect key={age} handleChange={this.handleChange} options={options.age} name=\"age\" />}\r\n                    </label>\r\n\r\n                </div>\r\n                <div className=\"filter-select size-select\">\r\n                    <label >Size</label>\r\n                    <label onClick={() => this.onToggleSelect('size')} className=\"select-label\">\r\n                        <label >{size}{!size && 'any'}</label>\r\n                        {toggleSelect.size && <FilterSelect key={size} handleChange={this.handleChange} options={options.size} name=\"size\" />}\r\n                    </label>\r\n                </div>\r\n                <div className=\"filter-select location-select\">\r\n                    <label className=\"location-label\">Location</label>\r\n                    <input placeholder=\"Enter location\" className='location-select' value={location} onChange={this.handleChangeInput} name=\"location\"  ></input>\r\n                </div>\r\n                <button className=\"search-btn filter-select\" onClick={this.onSubmitFilter}>\r\n                    <SearchIcon className=\"filter-search\"/>\r\n                </button>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport const PetFilter = withRouter(_PetFilter)","C:\\Users\\EyalYaish\\Development\\pet_me\\frontend\\src\\cmps\\FilterSelect.jsx",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":8,"column":8,"nodeType":"169","messageId":"170","endLine":8,"endColumn":18},{"ruleId":"167","severity":1,"message":"171","line":118,"column":13,"nodeType":"169","messageId":"170","endLine":118,"endColumn":27},{"ruleId":"167","severity":1,"message":"172","line":33,"column":15,"nodeType":"169","messageId":"170","endLine":33,"endColumn":20},{"ruleId":"167","severity":1,"message":"173","line":9,"column":8,"nodeType":"169","messageId":"170","endLine":9,"endColumn":23},{"ruleId":"174","severity":1,"message":"175","line":115,"column":41,"nodeType":"176","endLine":115,"endColumn":84},{"ruleId":"167","severity":1,"message":"177","line":16,"column":5,"nodeType":"169","messageId":"170","endLine":16,"endColumn":18},{"ruleId":"178","severity":1,"message":"179","line":13,"column":5,"nodeType":"180","messageId":"181","endLine":14,"endColumn":61},{"ruleId":"182","severity":1,"message":"183","line":21,"column":31,"nodeType":"184","messageId":"185","endLine":21,"endColumn":33},{"ruleId":"182","severity":1,"message":"183","line":35,"column":37,"nodeType":"184","messageId":"185","endLine":35,"endColumn":39},{"ruleId":"167","severity":1,"message":"173","line":1,"column":8,"nodeType":"169","messageId":"170","endLine":1,"endColumn":23},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'rightArrow' is defined but never used.","Identifier","unusedVar","'newLiveApprove' is assigned a value but never used.","'query' is assigned a value but never used.","'magnifyingGlass' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'socketIsReady' is assigned a value but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]