[{"/Users/itairom/Desktop/petMe/frontend/src/index.js":"1","/Users/itairom/Desktop/petMe/frontend/src/serviceWorkerRegistration.js":"2","/Users/itairom/Desktop/petMe/frontend/src/reportWebVitals.js":"3","/Users/itairom/Desktop/petMe/frontend/src/store/store.js":"4","/Users/itairom/Desktop/petMe/frontend/src/App.jsx":"5","/Users/itairom/Desktop/petMe/frontend/src/pages/LoginSignup.jsx":"6","/Users/itairom/Desktop/petMe/frontend/src/cmps/Header.jsx":"7","/Users/itairom/Desktop/petMe/frontend/src/store/reducers/index.js":"8","/Users/itairom/Desktop/petMe/frontend/src/services/socketService.js":"9","/Users/itairom/Desktop/petMe/frontend/src/store/actions/userActions.js":"10","/Users/itairom/Desktop/petMe/frontend/src/store/reducers/systemReducer.js":"11","/Users/itairom/Desktop/petMe/frontend/src/store/reducers/userReducer.js":"12","/Users/itairom/Desktop/petMe/frontend/src/services/httpService.js":"13","/Users/itairom/Desktop/petMe/frontend/src/services/userService.js":"14","/Users/itairom/Desktop/petMe/frontend/src/store/reducers/petReducer.js":"15","/Users/itairom/Desktop/petMe/frontend/src/services/petService.js":"16","/Users/itairom/Desktop/petMe/frontend/src/services/asyncStorageService.js":"17","/Users/itairom/Desktop/petMe/frontend/src/cmps/PetList.jsx":"18","/Users/itairom/Desktop/petMe/frontend/src/cmps/PetPreview.jsx":"19","/Users/itairom/Desktop/petMe/frontend/src/pages/PetApp.jsx":"20","/Users/itairom/Desktop/petMe/frontend/src/pages/PetDetails.jsx":"21","/Users/itairom/Desktop/petMe/frontend/src/store/actions/petActions.js":"22","/Users/itairom/Desktop/petMe/frontend/src/pages/Explore.jsx":"23","/Users/itairom/Desktop/petMe/frontend/src/pages/LoginSignUp.jsx":"24","/Users/itairom/Desktop/petMe/frontend/src/cmps/PetFilter.jsx":"25","/Users/itairom/Desktop/petMe/frontend/src/cmps/Footer.jsx":"26","/Users/itairom/Desktop/petMe/frontend/src/cmps/CommentsCmp.jsx":"27","/Users/itairom/Desktop/petMe/frontend/src/cmps/LongTxt.jsx":"28","/Users/itairom/Desktop/petMe/frontend/src/services/utilService.js":"29","/Users/itairom/Desktop/petMe/frontend/src/pages/Profile.jsx":"30","/Users/itairom/Desktop/petMe/frontend/src/cmps/GoogleMap.jsx":"31","/Users/itairom/Desktop/petMe/frontend/src/cmps/HeartLike.jsx":"32","/Users/itairom/Desktop/petMe/frontend/src/cmps/HomepagePreview.jsx":"33","/Users/itairom/Desktop/petMe/frontend/src/services/cloudinaryService.js":"34","/Users/itairom/Desktop/petMe/frontend/src/cmps/FilterDynamic.jsx":"35","/Users/itairom/Desktop/petMe/frontend/src/cmps/SocketsNotification.jsx":"36","/Users/itairom/Desktop/petMe/frontend/src/cmps/FilterSelect.jsx":"37"},{"size":911,"mtime":1622110866248,"results":"38","hashOfConfig":"39"},{"size":5064,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":364,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":439,"mtime":1622195954984,"results":"42","hashOfConfig":"39"},{"size":1051,"mtime":1623058174247,"results":"43","hashOfConfig":"39"},{"size":5193,"mtime":1623058174254,"results":"44","hashOfConfig":"39"},{"size":6093,"mtime":1623069877063,"results":"45","hashOfConfig":"39"},{"size":319,"mtime":1622128435877,"results":"46","hashOfConfig":"39"},{"size":2626,"mtime":1622965134908,"results":"47","hashOfConfig":"39"},{"size":4459,"mtime":1623069877066,"results":"48","hashOfConfig":"39"},{"size":735,"mtime":1622892945357,"results":"49","hashOfConfig":"39"},{"size":1460,"mtime":1622785692265,"results":"50","hashOfConfig":"39"},{"size":1136,"mtime":1622105868911,"results":"51","hashOfConfig":"39"},{"size":3625,"mtime":1623069877066,"results":"52","hashOfConfig":"39"},{"size":2087,"mtime":1622971761058,"results":"53","hashOfConfig":"39"},{"size":2139,"mtime":1623058174257,"results":"54","hashOfConfig":"39"},{"size":3489,"mtime":1622887128855,"results":"55","hashOfConfig":"39"},{"size":355,"mtime":1622965134900,"results":"56","hashOfConfig":"39"},{"size":1690,"mtime":1623046147319,"results":"57","hashOfConfig":"39"},{"size":6983,"mtime":1623056470594,"results":"58","hashOfConfig":"39"},{"size":12535,"mtime":1623088798704,"results":"59","hashOfConfig":"39"},{"size":2150,"mtime":1623055199753,"results":"60","hashOfConfig":"39"},{"size":3685,"mtime":1623056667275,"results":"61","hashOfConfig":"39"},{"size":5395,"mtime":1622187771797,"results":"62","hashOfConfig":"39"},{"size":4431,"mtime":1623054729065,"results":"63","hashOfConfig":"39"},{"size":780,"mtime":1622787510354,"results":"64","hashOfConfig":"39"},{"size":4669,"mtime":1623058174250,"results":"65","hashOfConfig":"39"},{"size":870,"mtime":1623046147319,"results":"66","hashOfConfig":"39"},{"size":2198,"mtime":1622490041459,"results":"67","hashOfConfig":"39"},{"size":13529,"mtime":1623069877065,"results":"68","hashOfConfig":"39"},{"size":1443,"mtime":1622635823152,"results":"69","hashOfConfig":"39"},{"size":2550,"mtime":1623058174251,"results":"70","hashOfConfig":"39"},{"size":2549,"mtime":1623058174252,"results":"71","hashOfConfig":"39"},{"size":587,"mtime":1621846706000,"results":"72","hashOfConfig":"39"},{"size":1374,"mtime":1623046147318,"results":"73","hashOfConfig":"39"},{"size":1894,"mtime":1623058174253,"results":"74","hashOfConfig":"39"},{"size":705,"mtime":1623057864184,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"19lla53",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},"/Users/itairom/Desktop/petMe/frontend/src/index.js",[],["162","163"],"/Users/itairom/Desktop/petMe/frontend/src/serviceWorkerRegistration.js",[],"/Users/itairom/Desktop/petMe/frontend/src/reportWebVitals.js",[],"/Users/itairom/Desktop/petMe/frontend/src/store/store.js",[],"/Users/itairom/Desktop/petMe/frontend/src/App.jsx",[],"/Users/itairom/Desktop/petMe/frontend/src/pages/LoginSignup.jsx",[],"/Users/itairom/Desktop/petMe/frontend/src/cmps/Header.jsx",["164","165","166"],"import userIcon from '../assets/img/header/user.svg' // relative path to image \r\nimport menuIcon from '../assets/img/header/menu.svg' // relative path to image \r\nimport logo from '../assets/img/logo.png' // relative path to image \r\nimport React, { Component } from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions'\r\nimport { socketService } from '../services/socketService'\r\nimport { store } from 'react-notifications-component';\r\nimport magnifyingGlass from '../assets/img/svg/magnifying-glass.svg' // relative path to image \r\nimport { loadPets } from '../store/actions/petActions'\r\nimport { approveAdoptToOwner } from '../store/actions/userActions'\r\nimport { PetFilter } from './PetFilter'\r\nimport { ReactComponent as Logo } from '../assets/img/svg/logo1.svg'\r\n\r\n\r\n\r\nclass _Header extends Component {\r\n\r\n    state = {\r\n        isProfileShown: false,\r\n        isRequested: false,\r\n        navBackground: false,\r\n        isFilterShown: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('click', this.handleClick)\r\n        window.addEventListener('scroll', this.handleScroll)\r\n        this.props.loggedInUser && socketService.emit('user-join', this.props.loggedInUser._id)\r\n        socketService.on('sending-new-owner-to-save', () => {\r\n            this.props.approveAdoptToOwner()\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('click', this.handleClick)\r\n        window.removeEventListener('scroll', this.handleScroll)\r\n        // socketService.off('user-join')\r\n    }\r\n\r\n    handleScroll = () => {\r\n        this.setState({ isFilterShown: false })\r\n        if (window.pageYOffset > 50) {\r\n            this.setState({ navBackground: true });\r\n        } else {\r\n            this.setState({ navBackground: false });\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (this.state.isProfileShown && window.event.clientY > 80) {\r\n            this.setState({ isProfileShown: false })\r\n        }\r\n    }\r\n\r\n    onLogout = () => {\r\n        this.props.logout()\r\n    }\r\n\r\n    toggleDropdown = () => {\r\n        this.setState({ isProfileShown: !this.state.isProfileShown })\r\n    }\r\n\r\n    onToggleFilter = () => {\r\n        this.setState({ isFilterShown: !this.state.isFilterShown }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        const { loggedInUser, inExplore, isShowSearch } = this.props\r\n        const { isProfileShown, navBackground, isFilterShown } = this.state\r\n\r\n        return (\r\n            <header className={`main-header ${navBackground && 'nav-white'}  ${!navBackground && 'nav-transparent'} \r\n              main-container     ${isShowSearch && isFilterShown && 'resize-nav'}`}   >\r\n                < nav className=\"header-container\" >\r\n                    <NavLink  to=\"/\">\r\n                        <div className=\"logo-container flex\">\r\n                            <Logo className=\"logo\" />\r\n                            <h1 className={ `logo-title ${navBackground && 'black'} ${inExplore && 'black'} ` }>PetMe</h1>\r\n                        </div>\r\n                    </NavLink>\r\n\r\n                    <section className=\"filter-section\">\r\n                        { isShowSearch && !isFilterShown && <div className=\"explore-search\">\r\n                            <span onClick={ () => this.onToggleFilter() } > Start your search</span>\r\n                            {/* <span onClick={() => this.onToggleFilter()} > Start your search</span> */ }\r\n                            <div className=\"search-btn-explore\">\r\n                                <img className=\"filter-search\" src={ magnifyingGlass } alt=\"glass\" />\r\n                            </div>\r\n                        </div> }\r\n                        { isShowSearch && isFilterShown &&\r\n                            < PetFilter />\r\n                        }\r\n                    </section>\r\n\r\n                    <div>\r\n                        {/* <span>{ (this.state.isRequested) ? 'requests' : '' }</span> */ }\r\n                    </div>\r\n\r\n\r\n                    <div className=\"right-nav\">\r\n                        <NavLink onClick={() => this.props.loadPets()} className={`explore-btn ${navBackground && 'black'} ${inExplore && 'black'} `}\r\n                            to='/explore/?gender=&age=&type=&location=&size='>\r\n                            Explore</NavLink>\r\n                        <div onClick={ () => this.toggleDropdown() } className=\"login-profile\">\r\n                            { isProfileShown && <div className=\"user-dropdown\">\r\n                                <div className=\"dropdown-list\">\r\n                                    { (loggedInUser) && <Link to='/profile' >\r\n                                        <span>Profile</span>\r\n                                    </Link> }\r\n\r\n                                    { (loggedInUser) &&\r\n                                        <a href=\"\" onClick={ () => this.onLogout() }>Logout</a>\r\n                                    }\r\n                                    { (!loggedInUser) && <Link to='/login' >\r\n                                        <span>Login</span>\r\n                                    </Link> }\r\n                                </div>\r\n                            </div> }\r\n\r\n                            <img src={ menuIcon } alt=\"icon\" />\r\n                            { (!loggedInUser) && <img src={ userIcon } alt=\"icon\" /> }\r\n                            { (loggedInUser) && <img className=\"profile-icon\" src={ loggedInUser.imgUrl } alt=\"icon\" /> }\r\n                        </div>\r\n                    </div>\r\n                </nav >\r\n            </header >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        inExplore: state.systemModule.onExplore,\r\n        isShowSearch: state.systemModule.isShowSearch\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout, loadPets, approveAdoptToOwner\r\n}\r\n\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","/Users/itairom/Desktop/petMe/frontend/src/store/reducers/index.js",[],"/Users/itairom/Desktop/petMe/frontend/src/services/socketService.js",[],"/Users/itairom/Desktop/petMe/frontend/src/store/actions/userActions.js",["167"],"import { userService } from '../../services/userService'\r\nimport { socketService } from '../../services/socketService'\r\n\r\n// THUNK action creators\r\n// Work asynchronously with the service and dispatch actions to the reducers \r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'LOADING_START' })\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n      //for sending new requests\r\n      socketService.on('user-updated', newAdoptReq => {\r\n        console.log(newAdoptReq)\r\n        dispatch({\r\n          type: 'ADD_REQUEST', newAdoptReq\r\n        })\r\n\r\n      })\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n    } finally {\r\n      dispatch({ type: 'LOADING_DONE' })\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId)\r\n      dispatch({ type: 'REMOVE_USER', userId })\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.login(userCreds)\r\n      socketService.emit('user-join', user._id)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\nexport function getUser(user) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.getById(user)\r\n      socketService.emit('user-join', user._id)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.signup(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function logout(userId) {\r\n  console.log('logout');\r\n  return async dispatch => {\r\n    // socketService.off(userId)\r\n    try {\r\n      await userService.logout()\r\n      dispatch({ type: 'SET_USER', user: null })\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function adoptRequest(request) {\r\n  return dispatch => {\r\n    return userService.adoptRequest(request)\r\n      .then(request => {\r\n        console.log(\"🚀 ~ file: userActions.js ~ line 69 ~ adoptRequest ~ request\", request)\r\n        const action = {\r\n          type: 'ADD_REQUEST', request\r\n        }\r\n        dispatch(action)\r\n      })\r\n  }\r\n}\r\n\r\nexport function newAdoptRequest(data) { // Action Creator\r\n  return dispatch => {\r\n    console.log('im in user action before service')\r\n    return userService.saveNewRequest(data)\r\n      .then((updatedUser) => {\r\n        socketService.emit('adopt-request', data)\r\n        console.log('im in user action after service')\r\n        const action = {\r\n          type: 'UPDATE_USER',\r\n          user: updatedUser\r\n        }\r\n        dispatch(action)\r\n      })\r\n  }\r\n}\r\nexport function approveAdopt(data) { // Action Creator\r\n  return async dispatch => {\r\n    const updatedUsers = await userService.saveNewApprove(data)\r\n    // console.log(updatedUsers)\r\n    console.log('updating oldOwner')\r\n    socketService.emit('update-new-owner', updatedUsers.updatedOwner)\r\n    const action = {\r\n      type: 'UPDATE_USER',\r\n      user: updatedUsers.updatedLoggedInUser\r\n    }\r\n    socketService.emit('approve-requested', data)\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function approveAdoptToOwner(newOwner) { // Action Creator\r\n  return async dispatch => {\r\n    const updatedNewOwner = await userService.update(newOwner)\r\n    console.log('updating new-owner-user')\r\n    const action = {\r\n      type: 'UPDATE_USER',\r\n      user: updatedNewOwner\r\n    }\r\n    dispatch(action)\r\n  }\r\n}\r\n\r\nexport function onExplore() {\r\n  return dispatch => {\r\n    const action = {\r\n      type: 'ON_EXPLORE'\r\n    }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function onHome() {\r\n  return dispatch => {\r\n    const action = {\r\n      type: 'ON_HOME'\r\n    }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function showSearch() {\r\n  return dispatch => {\r\n    const action = {\r\n      type: 'SHOW_SEARCH'\r\n    }\r\n    dispatch(action)\r\n  }\r\n}\r\nexport function hideSearch() {\r\n  return dispatch => {\r\n    const action = {\r\n      type: 'NOT_SHOW_SEARCH'\r\n    }\r\n    dispatch(action)\r\n  }\r\n}\r\n\r\n","/Users/itairom/Desktop/petMe/frontend/src/store/reducers/systemReducer.js",["168"],"const initialState = {\r\n  isLoading: false,\r\n  onExplore: false,\r\n  isShowSearch:false\r\n};\r\n\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SHOW_SEARCH':\r\n      return { ...state, isShowSearch: true }\r\n    case 'NOT_SHOW_SEARCH':\r\n      return { ...state, isShowSearch: false }\r\n    case 'SHOW_SEARCH':\r\n      return { ...state, isShowSearch: !state.isShowSearch }\r\n    case 'ON_EXPLORE':\r\n      return { ...state, onExplore: true }\r\n    case 'ON_HOME':\r\n      return { ...state, onExplore: false }\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","/Users/itairom/Desktop/petMe/frontend/src/store/reducers/userReducer.js",[],"/Users/itairom/Desktop/petMe/frontend/src/services/httpService.js",[],"/Users/itairom/Desktop/petMe/frontend/src/services/userService.js",[],"/Users/itairom/Desktop/petMe/frontend/src/store/reducers/petReducer.js",[],"/Users/itairom/Desktop/petMe/frontend/src/services/petService.js",[],"/Users/itairom/Desktop/petMe/frontend/src/services/asyncStorageService.js",[],"/Users/itairom/Desktop/petMe/frontend/src/cmps/PetList.jsx",[],"/Users/itairom/Desktop/petMe/frontend/src/cmps/PetPreview.jsx",[],"/Users/itairom/Desktop/petMe/frontend/src/pages/PetApp.jsx",["169"],"import { connect } from 'react-redux'\nimport React from 'react'\nimport { loadPets, addPet } from '../store/actions/petActions'\nimport { onHome, showSearch, hideSearch } from '../store/actions/userActions'\nimport { Link } from 'react-router-dom'\nimport { FilterDynamic } from '../cmps/FilterDynamic'\nimport { HomepagePreview } from '../cmps/HomepagePreview'\nimport contact from '../assets/img/svg/contact.svg'\nimport info from '../assets/img/svg/info.svg'\nimport rightArrow from '../assets/img/svg/arrow-right.png'\nimport paw from '../assets/img/svg/paw.svg'\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport { ReactComponent as Loader } from '../assets/img/loaders/loader_3.svg' // relative path to image \n\n\nclass _PetApp extends React.Component {\n\n    async componentDidMount() {\n        window.scroll(0, 0)\n        this.props.hideSearch()\n        this.props.onHome()\n        await this.props.loadPets()\n    }\n\n    render() {\n        const { pets } = this.props\n        if (pets.length === 0) return <Loader />\n        return (\n            <section className=\"main-container\">\n                <section className=\"hero full\">\n                    <div className=\"hero-content\">\n                        <FilterDynamic />\n                        <h1>Find your</h1>\n                        <h1> best friend</h1>\n                    </div>\n                </section>\n                <div className=\"type-cards\">\n                    <h2 className=\"type-cards-title\">Our sweet pet types</h2>\n                    <div className=\"type-img\">\n                        <div>\n                            <Link to={`/explore/?gender=&age=&type=dog&location=&size=`} >\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622205405/dogs/dog3/frnach-dog3_npdovb.jpg\" alt=\"card\" />\n                                <h4>Dogs</h4>\n                            </Link>\n                        </div>\n                        <div>\n                            <Link to={`/explore/?gender=&age=&type=cat&location=&size=`} >\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622203804/petMe/cats/cat_nnrk1h.jpg\" alt=\"card\" />\n                                <h4>Cats</h4>\n                            </Link>\n                        </div>\n                        <div>\n                            <Link to={`/explore/?gender=&age=&type=rabbit&location=&size=`} >\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622206572/petMe/rabbit/rrabit3/1_2_chadja.jpg\" alt=\"card\" />\n                                <h4>Rabbits</h4>\n                            </Link>\n                        </div>\n                        <div>\n                            <Link to={`/explore/?gender=&age=&type=parrot&location=&size=`} >\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622213930/petMe/parrot/1_3_s1zdqk.jpg\" alt=\"card\" />\n                                <h4>Parrots</h4>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n                <section className=\"homepage-section-info\">\n                    <div className=\"content\">\n                        <div>\n                            <div className=\"info-title-icon\">\n                                <h2>Filter down to your perfect fit</h2>\n                                {/* <img className=\"info-icons\" src={magnifyingGlass} alt=\"glass\" /> */}\n                                <SearchOutlinedIcon className=\"info-icons\" />\n                            </div>\n                            <p> Personalize your search with filters like gender,\n                            type, size or a pool to get exactly what you want.\n                            {/* <img className=\"arrow-icons\" src={rightArrow} alt=\"\" /> */}\n                            </p>\n                        </div>\n                        <div>\n                            <div className=\"info-title-icon\">\n                                <h2>Dig into the details</h2>\n                                <img className=\"info-icons\" src={info} alt=\"glass\" />\n                            </div>\n                            <p> Check out the photos and view pet information.\n                                Next, read user reviews and comments about the pet and its owner.\n                                {/* <img className=\"arrow-icons\" src={rightArrow} alt=\"\" /> */}\n                                </p>\n                        </div>\n                        <div>\n                            <div className=\"info-title-icon\">\n                                <h2>Contact pet owners</h2>\n                                <img className=\"info-icons\" src={contact} alt=\"glass\" />\n                            </div>\n                            <p>  Once you have decided which pet you would like to adopt, contact the pet owners and keep your fingers crossed.\n                            {/* <img className=\"arrow-icons\" src={rightArrow} alt=\"\" /> */}\n                            </p>\n                        </div>\n                        <div>\n                            <div className=\"info-title-icon\">\n                                <h2>Adopt a friend!</h2>\n                                <img className=\"info-icons\" src={paw} alt=\"glass\" />\n                            </div>\n                            <p> In a quick and easy process you can adopt a pet that will become your new companion for life. Join us for a fun journey! \n                                \n                            </p>\n                        </div>\n                    </div>\n                </section>\n                <HomepagePreview pets={this.props.pets} />\n                <section className=\"homepage-about main-container full\">\n                    <div className=\"blur full\">\n                        <div className=\"about-content flex column\">\n                            <h2>Our vision</h2>\n                            <p>PetMe is dedicated to saving the lives of animals in need. We improve animal welfare in communities through adoption, education, and providing resources for people and pets.</p>\n                            <p>We strive for a world where every companion animal has a safe and loving home and their family has the knowledge and resources needed to give them the life they deserve.</p>\n                            <img className=\"welcome-logo\" src=\"https://petcolove.org/wp-content/uploads/2018/08/welcome-to-the-family-web.png\" alt=\"\" />\n                        </div>\n                    </div>\n                </section>\n            </section>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        pets: state.petModule.pets\n    }\n}\n\nconst mapDispatchToProps = {\n    loadPets,\n    addPet,\n    onHome,\n    showSearch,\n    hideSearch\n}\n\nexport const PetApp = connect(mapStateToProps, mapDispatchToProps)(_PetApp)","/Users/itairom/Desktop/petMe/frontend/src/pages/PetDetails.jsx",["170"],"/Users/itairom/Desktop/petMe/frontend/src/store/actions/petActions.js",[],"/Users/itairom/Desktop/petMe/frontend/src/pages/Explore.jsx",["171","172","173"],"import { connect } from 'react-redux'\nimport React from 'react'\nimport { loadPets } from '../store/actions/petActions'\nimport { onExplore, showSearch } from '../store/actions/userActions'\nimport { PetList } from '../cmps/PetList'\nimport userIcon from '../assets/img/loaders/loader_2.svg' // relative path to image\nimport magnifyingGlass from '../assets/img/svg/magnifying-glass.svg' // relative path to image \n\nclass _Explore extends React.Component {\n    state = {\n        isFilterShown: false,\n        filterBy: null,\n        sortBy: ''\n    }\n    async componentDidMount() {\n        console.log('cdm');\n        window.scroll(0, 0)\n        this.props.onExplore()\n        this.props.showSearch()\n        await this.onSetFilter()\n        await this.props.loadPets(this.state.filterBy)\n    }\n\n    onSetSort = () => {\n        const { filterBy, sortBy } = this.state\n        let filter = {\n            ...filterBy,\n            sort: sortBy\n        }\n        this.props.loadPets(filter)\n    }\n    handleChange = (event) => {\n        this.setState({ sortBy: event.target.value },\n            () => {\n                this.onSetSort()\n            })\n    }\n\n    onSetFilter = () => {\n        const search = new URLSearchParams(this.props.location.search)\n        let filterBy = {\n            gender: search.get('gender'),\n            type: search.get('type'),\n            age: search.get('age'),\n            size: search.get('size'),\n            location: search.get('location'),\n        }\n        this.setState({ filterBy })\n    }\n\n    onToggleFilter = () => {\n        this.setState({ isFilterShown: !this.state.isFilterShown }\n        )\n    }\n\n    render() {\n        const { pets } = this.props\n        const { isFilterShown, filterBy, sortBy } = this.state\n        if (!pets) return <img src={userIcon} alt=\"loading\" />\n        if (!filterBy) return <img src={userIcon} alt=\"loading\" />\n        return (\n            <section className=\"main-container explore-container\">\n\n                {/* {!isFilterShown && <div className=\"explore-search\">\n                    <span onClick={() => this.onToggleFilter()} > Start your search</span>\n                    <div className=\"search-btn-explore\">\n                        <img className=\"filter-search\" src={ magnifyingGlass } alt=\"glass\" />\n                    </div>\n                </div>} */}\n\n                {/* {isFilterShown && <PetFilter />} */}\n                {/* <section className=\"sort-by\"> */}\n                {/* <FormControl className={classes.formControl}> */}\n                {/* </section> */}\n\n                <div className=\"filter-description\">\n                    {!filterBy.type && <h1 >Our pets</h1>}\n                    {filterBy.type && <h1>Our <span> {filterBy.gender} {filterBy.size}  {filterBy.type}s</span>  </h1>}\n\n                    <div className=\"sort-form\">\n                        <label >Sort By</label>\n                        <select value={this.state.sortBy} onChange={this.handleChange}>\n                            {/* <option value=\"\">Any</option> */}\n                            <option value=\"createdAt\">Date</option>\n                            <option value=\"name\">Name</option>\n                            <option value=\"likes\">Likes</option>\n                        </select>\n                    </div>\n                </div>\n                < PetList pets={pets} />\n            </section>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        pets: state.petModule.pets,\n        inExplore: state.systemModule.onExplore\n    }\n}\n\nconst mapDispatchToProps = {\n    loadPets, onExplore, showSearch\n}\n\nexport const Explore = connect(mapStateToProps, mapDispatchToProps)(_Explore)\n","/Users/itairom/Desktop/petMe/frontend/src/pages/LoginSignUp.jsx",[],"/Users/itairom/Desktop/petMe/frontend/src/cmps/PetFilter.jsx",["174"],"import magnifyingGlass from '../assets/img/svg/magnifying-glass.svg' // relative path to image \nimport { withRouter } from 'react-router-dom'\nimport React from 'react'\nimport { FilterSelect } from './FilterSelect'\n\n\n\nclass _PetFilter extends React.Component {\n\n    state = {\n        filterBy: {\n            gender: '',\n            type: '',\n            age: '',\n            size: '',\n            location: ''\n        },\n        toggleSelect: {\n            gender: false,\n            type: false,\n            age: false,\n            size: false,\n        }\n    }\n\n    handleChangeInput = ({ target }) => {\n        const { name, value } = target\n        const { filterBy } = this.state\n        this.setState({ filterBy: { ...filterBy, [name]: value } })\n    }\n\n    handleChange = (value, name) => {\n\n\n        const { filterBy } = this.state\n        this.setState({\n            filterBy: {\n                ...filterBy,\n                [name]: value\n            }\n        })\n    }\n\n    onSubmitFilter = () => {\n        const query = new URLSearchParams(this.state.filterBy)\n        this.props.history.push(`/explore/?${query.toString()}`)\n    }\n\n    onToggleSelect = (by) => {\n\n        const { toggleSelect } = this.state\n        this.setState({\n            toggleSelect: {\n                ...toggleSelect,\n                [by]: !toggleSelect[by]\n            }\n        })\n    }\n\n    setOptions = () => {\n        const options = {\n            size: ['small', 'medium', 'big'],\n            type: ['cat', 'dog', 'rabbit', 'dog', 'parrot', 'hamster'],\n            gender: ['male', 'female'],\n            age: ['young', 'adult', 'senior']\n        }\n        return options\n    }\n\n    render() {\n        const options = this.setOptions()\n        const sizeOptions = ['small', 'medium', 'big']\n        const { gender, age, type, location, size } = this.state.filterBy\n        const { toggleSelect } = this.state\n\n        return (\n\n            <section className='pet-filter'>\n                <div className=\"filter-select pet-select\">\n                    <label >Pet</label>\n                    <label onClick={() => this.onToggleSelect('type')} className=\"select-label\">\n                        <label >{type}{!type && 'select'}</label>\n                        {toggleSelect.type && <FilterSelect key={type} handleChange={this.handleChange} options={options.type} name=\"type\" />}\n                    </label>\n\n                </div>\n                <div className=\"filter-select gender-select\">\n                    <label >Gender</label>\n                    <label onClick={() => this.onToggleSelect('gender')} className=\"select-label\">\n                        <label >{gender}{!gender && 'select'}</label>\n                        {toggleSelect.gender && <FilterSelect key={gender} handleChange={this.handleChange} options={options.gender} name=\"gender\" />}\n                    </label>\n\n\n                </div>\n                <div className=\"filter-select age-select\">\n                    <label >Age</label>\n                    <label onClick={() => this.onToggleSelect('age')} className=\"select-label\">\n                        <label >{age}{!age && 'select'}</label>\n                        {toggleSelect.age && <FilterSelect key={age} handleChange={this.handleChange} options={options.age} name=\"age\" />}\n                    </label>\n\n                </div>\n                <div className=\"filter-select size-select\">\n                    <label >Size</label>\n                    <label onClick={() => this.onToggleSelect('size')} className=\"select-label\">\n                        <label >{size}{!size && 'select'}</label>\n                        {toggleSelect.size && <FilterSelect key={size} handleChange={this.handleChange} options={options.size} name=\"size\" />}\n                    </label>\n\n\n\n                </div>\n                <div className=\"filter-select location-select\">\n                    <label className=\"location-label\">Location</label>\n                    <input placeholder=\"Enter location\" className='location-select' value={location} onChange={this.handleChangeInput} name=\"location\"  ></input>\n                </div>\n\n\n\n                <button className=\"search-btn filter-select\" onClick={this.onSubmitFilter}>\n                    <img className=\"filter-search\" src={magnifyingGlass} alt=\"glass\" />\n                </button>\n            </section>\n        )\n    }\n}\n\nexport const PetFilter = withRouter(_PetFilter)","/Users/itairom/Desktop/petMe/frontend/src/cmps/Footer.jsx",[],"/Users/itairom/Desktop/petMe/frontend/src/cmps/CommentsCmp.jsx",[],"/Users/itairom/Desktop/petMe/frontend/src/cmps/LongTxt.jsx",[],"/Users/itairom/Desktop/petMe/frontend/src/services/utilService.js",[],"/Users/itairom/Desktop/petMe/frontend/src/pages/Profile.jsx",["175"],"import AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined'\n// import StarRateIcon from '@material-ui/icons/StarRate'\nimport React, { Component } from 'react'\n// import { store } from 'react-notifications-component'\nimport { connect } from 'react-redux'\nimport Loader from '../assets/img/loaders/loader_3.svg' // relative path to image \nimport Pin from '../assets/img/svg/pin.svg' // relative path to image \nimport { petService } from '../services/petService'\n\n// import { socketService } from '../services/socketService'\nimport { onExplore } from '../store/actions/userActions'\nimport Rating from '@material-ui/lab/Rating';\nimport { utilService } from '../services/utilService'\nimport { loadUsers, login, logout, removeUser, signup, approveAdopt, getUser } from '../store/actions/userActions'\nimport { loadPets } from '../store/actions/petActions'\nimport { socketService } from '../services/socketService'\n// import { userService } from '../services/userService'\n\n\nclass _Profile extends Component {\n    state = {\n        userPets: [],\n        userRequests: [],\n        isGotRequests: false,\n        isRemoveReq: false,\n        reqBtnTxt: '',\n        adoptionRequestsInfo: [],\n        loggedInUser: null\n    }\n\n    componentDidMount() {\n        console.log('mounted')\n        window.scrollTo(0, 0)\n        this.loadLoggedInUser()\n\n        this.onLoadPets()\n        // this.onLoadRequests()\n        this.props.onExplore()\n    }\n\n    componentWillUnmount() {\n        console.log('unmount')\n    }\n\n    loadLoggedInUser = () => {\n        const loggedInUser = this.props.getUser(this.props.loggedInUser)\n        this.setState({ loggedInUser })\n    }\n    onLoadPets = () => {\n        this.props.loadPets()\n            .then(() => {\n                const userPets = this.props.loggedInUser.pets.map(userPet => {\n                    return this.props.pets.filter(pet => userPet._id === pet._id)\n                }).flatMap(e => e)\n                this.setState({ userPets })\n            })\n        // this.props.loadPets()\n        // .then(() => {\n        //     const pet = this.props.pets.find(pet => pet._id === id)\n        //     this.props.loadUsers()\n        //         .then(() => {\n        //             const user = this.props.users.find(user => user._id === pet.owner._id)\n        //             this.setState({ pet, owner: user, loggedInUser: this.props.loggedInUser })\n        //         })\n        // })    // socketService\n        // if(this.props.pets.length > 0) {\n        // let userPets = this.props.loggedInUser.pets.map(userPet => {\n        //     return pets.filter(pet => userPet._id === pet._id)\n        // })\n\n        // else {\n        //     userPets = this.props.loadPets()\n        //     console.log(userPets)\n        // }\n        // this.setState({ userPets })\n    }\n\n\n\n    onLoadRequests = () => {\n        const adoptionRequestsInfo = this.props.users.map(user => {\n            return user.pets.map(pet => {\n                return pet.adoptQue.map(request => {\n                    if (request.userId === this.props.loggedInUser._id) {\n                        return { user, pet: { ...pet, userId: user._id } }\n                    }\n                    return undefined\n                }).filter(e => e)\n            }).flatMap(e => e)\n        });\n        this.setState({ adoptionRequestsInfo })\n    }\n\n    removeReq = (ev) => {\n        console.log(ev.target.value)\n    }\n    toggleRemoveReq = () => {\n        console.log('button revealed')\n    }\n    reqBtnTxt = (txt) => {\n        this.setState({ reqBtnTxt: txt })\n        console.log('change to ' + txt)\n    }\n\n    approveAdopt = (pet, req, loggedInUser, idx) => {\n        const msg = loggedInUser.fullname + ' just approved your request to adopt ' + pet.name\n        const data = { pet, req, loggedInUser, idx, msg }\n        this.props.approveAdopt(data)\n        socketService.emit('aprove-adopt', msg)\n    }\n\n    render() {\n        const { loggedInUser } = this.props\n        const { userPets } = this.state\n        // const userPets = this.props.loggedInUser.pets.map(pet => {\n        //     return this.props.pets.filter(userPet => userPet._id === pet._id)\n        // }).flatMap(e => e)\n        console.log(userPets)\n        if (!loggedInUser) return <img src={ Loader } alt=\"loadnig\" />\n        if (!userPets) return <img src={ Loader } alt=\"loadnig\" />\n        return (\n\n            <section className=\"main-profile main-container\">\n\n                <section className=\"user-card\">\n                    <div className=\"profile-img\">\n                        {/* <button onClick={() => cloudinaryService.uploadImg()}>U</button> */ }\n                        <img src={ loggedInUser.imgUrl } alt={ <AccountCircleOutlinedIcon /> } />\n                    </div>\n                    <section className=\"user-info\">\n                        <h1>{ loggedInUser.fullname } </h1>\n                        <h4>{ loggedInUser.username } </h4>\n                        <h4 className=\"italic\">\"{ loggedInUser.title }\"</h4>\n                        <div className=\"location-info\">\n                            <img src={ Pin } alt=\"location info\" />\n                            <div>{ loggedInUser.loc.address }</div>\n                        </div>\n                        <div className=\"user-rate\">\n                            <Rating name=\"disabled\" value={ loggedInUser.rating ? loggedInUser.rating : loggedInUser.reviews[0]?.rate } disabled />\n                        </div>\n                    </section>\n                    <div><button className=\"logout\">Logout</button></div>\n                </section>\n\n                {/* <section className={ this.state.isGotRequests ? 'profile-pets-container flex' : 'profile-pets-container hide' }> */ }\n                <section className=\"profile-pets-container flex\" >\n\n                    <div className=\"user-pets\">\n                        <h1>My pets</h1>\n                        { userPets.map((pet, idx) => {\n                            return (\n                                <div className=\"adopt-card flex\" key={ utilService.makeId(6) }>\n                                    <div className=\"adopt-card-info\">\n\n                                        <div className=\"pet-header flex\">\n                                            <div className=\"pet-header-txt\">\n                                                <h3>{ pet.name }</h3>\n                                                <h4>Added: { utilService.timeSince(pet.addedAt, 'ago') }</h4>\n                                                <h4>Request Queue</h4>\n                                            </div>\n                                            <div className=\"pet-img-box flex align-center\">\n                                                <img src={ pet.imgUrls[0] } alt=\"pet\" />\n                                            </div>\n                                        </div>\n                                        <section className=\"adopt-table\">\n                                            <table className=\"pet-table-card\">\n                                                {/* <thead className=\"table-head\">\n                                                <tr>\n                                                    <td>Adopter Name</td>\n                                                    <td>Message</td>\n                                                    <td>Date</td>\n                                                    <td></td>\n                                                </tr>\n                                            </thead> */}\n                                                <tbody className=\"table-body\" key={ utilService.makeId(6) }>\n                                                    { loggedInUser.pets[idx]\n                                                        .adoptQue.map(req => {\n                                                            return (<tr key={ utilService.makeId(6) }>\n                                                                <td>{ req.fullname }</td>\n                                                                <td>{ req.message }</td>\n                                                                <td>{ utilService.timeSince(req.date, 'ago') }</td>\n                                                                <td><button onClick={ () => this.approveAdopt(pet, req, loggedInUser, idx) } className=\"aprove-btn\">Aprove</button></td>\n                                                            </tr>)\n                                                        }) }\n                                                </tbody>\n\n                                            </table>\n                                        </section>\n                                    </div>\n                                </div>\n                            )\n                        }) }\n                    </div>\n\n                    <div className=\"user-requests hide\">\n                        <h1>My requests</h1>\n                        <div className=\"request-list flex column\">\n                            { userPets.map((pet, idx) => {\n                                return (\n                                    loggedInUser.pets[idx]\n                                        .adoptQue.map(req => {\n                                            return (\n                                                <div className=\"request-card flex column\" key={ utilService.makeId(6) }>\n                                                    <div className=\"main-card-section\">\n                                                        {/* <img src={ pet.imgUrl[0] } alt=\"pet-img\" className=\"pet-img\" /> */}\n                                                        <div className=\"request-info\">\n                                                            <div className=\"req-owner-name flex\">\n                                                                <h3>From:</h3>\n                                                                <span className=\"owner-name\">{ req.fullname }</span>\n                                                            </div>\n                                                            <div className=\"req-pet-info flex\">\n                                                                <h3 className=\"about-pet\">Messege:</h3>\n                                                                <span className=\"pet-name\">{ req.message }</span>\n                                                            </div>\n                                                            <div className=\"req-time\">{ utilService.timeSince(req.date, 'ago') }</div>\n                                                        </div>\n                                                        <div className=\"request-statue\">\n                                                            <button onClick={ () => this.toggleRemoveReq }\n                                                                // onMouseOver={ () => this.hoverRemoveReq }\n                                                                onMouseOver={ () => this.reqBtnTxt('Delete this Request') }\n                                                                onMouseOut={ () => this.reqBtnTxt('Requested/Aprove') }\n                                                                className={ this.state.isRemoveReqHover ? 'remove-request hovering' : 'remove-request' }>\n                                                                {/* ⬆ Hover will reveal 'Delete this Request' and change the color */ }\n                                                                {/* ⬇ change Requested/Aprove with adoptQue.status */ }\n                                                                {/* { this.state.isRemoveReqHover ? 'Delete this Request' : 'Requested/Aprove' } */ }\n                                                                { this.state.reqBtnTxt ? this.state.reqBtnTxt : 'Requested/Aprove' }\n                                                                {/* <div className={ this.state.isRemoveReq ? 'remove' : 'remove hide' }>\n                                                <button onClick={ (event) => this.removeReq(event) }>Yes</button>\n                                                <button onClick={ (event) => this.removeReq(event) }>No</button>\n                                            </div> */}\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                    {/* for commenting back to owner - opan bottom modal */ }\n                                                    <div className=\"card-extention\"></div>\n                                                </div>\n                                            )\n                                        })\n\n                                )\n                            }) }\n                        </div>\n                    </div>\n                </section>\n\n            </section >\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.userModule.users,\n        loggedInUser: state.userModule.loggedInUser,\n        isLoading: state.systemModule.isLoading,\n        pets: state.petModule.pets\n    }\n}\nconst mapDispatchToProps = {\n    login,\n    logout,\n    signup,\n    removeUser,\n    loadUsers,\n    loadPets,\n    onExplore,\n    approveAdopt,\n    getUser\n}\n\nexport const Profile = connect(mapStateToProps, mapDispatchToProps)(_Profile)\n","/Users/itairom/Desktop/petMe/frontend/src/cmps/GoogleMap.jsx",[],"/Users/itairom/Desktop/petMe/frontend/src/cmps/HeartLike.jsx",[],"/Users/itairom/Desktop/petMe/frontend/src/cmps/HomepagePreview.jsx",["176","177"],"import { PetPreview } from '../cmps/PetPreview.jsx'\nimport { connect } from 'react-redux'\nimport React from 'react'\nimport { loadPets, addPet } from '../store/actions/petActions'\n\nclass _HomepagePreview extends React.Component {\n\n    state = {\n        likedPets: [],\n        mostWaitingPets: []\n    }\n\n    async componentDidMount() {\n        await this.props.loadPets()\n        this.setLikedPets()\n        this.setMostWaitingPets()\n    }\n\n    setLikedPets = () => {\n        let likedPets = [...this.props.pets]\n        likedPets.sort((a, b) => {\n            if (a.likes > b.likes) {\n                return -1\n            }\n            if (a.likes < b.likes) {\n                return 1\n            }\n        })\n        likedPets.splice(4)\n        this.setState({ likedPets })\n    }\n\n    setMostWaitingPets = () => {\n        let mostWaitingPets = [...this.props.pets]\n        mostWaitingPets.sort((a, b) => {\n            if (b.addedAt > a.addedAt) {\n                return -1\n            }\n            if (a.addedAt < b.addedAt) {\n                return 1\n            }\n        })\n        mostWaitingPets.splice(4)\n        this.setState({ mostWaitingPets })\n    }\n\n    render() {\n        const { likedPets, mostWaitingPets } = this.state\n        if (!likedPets.length) return <h1>loading</h1>\n        if (!mostWaitingPets.length) return <h1>loading</h1>\n\n        return (\n            <>\n                <section className=\"type-cards preview-homepage\">\n                    <h2 className=\"type-cards-title\">Waiting long time to adopt</h2>\n                    <div className=\"preview-cards\">\n                        { mostWaitingPets.map(previewPet => {\n                            return <PetPreview pet={ previewPet } key={ previewPet._id } />\n                        }) }\n                    </div>\n                </section>\n\n                <section className=\"type-cards preview-homepage\">\n                    <h2 className=\"type-cards-title\">Most Liked Pets</h2>\n                    <div className=\"preview-cards\">\n                        { likedPets.map(previewPet => {\n                            return <PetPreview pet={ previewPet } key={ previewPet._id } />\n                        }) }\n                    </div>\n                </section>\n            </>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        homePreviewPets: state.petModule.homePreviewPets\n    }\n}\n\n\nconst mapDispatchToProps = {\n    loadPets,\n    addPet,\n}\n\nexport const HomepagePreview = connect(mapStateToProps, mapDispatchToProps)(_HomepagePreview)","/Users/itairom/Desktop/petMe/frontend/src/services/cloudinaryService.js",[],["178","179"],"/Users/itairom/Desktop/petMe/frontend/src/cmps/FilterDynamic.jsx",[],"/Users/itairom/Desktop/petMe/frontend/src/cmps/SocketsNotification.jsx",["180"],"import { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport { store } from 'react-notifications-component'\nimport { socketService } from '../services/socketService'\n\n\n\nexport class SocketsNotification extends Component {\n  state = {\n\n  }\n\n  componentDidMount() {\n    socketService.on('adopt-request-owner', (msg) => {\n      console.log('messging the owner')\n      this.adoptNotify(msg)\n    });\n    socketService.on('adopt-request-requester', (msg) => {\n      console.log('messging the requester')\n      this.adoptNotify(msg)\n    });\n    socketService.on('already-requested', (msg) => {\n      this.alertNotify(msg)\n    });\n  }\n\n  componentWillUnmount() {\n    console.log('SocketsNotification - unmount')\n    socketService.off('adopt-request-owner')\n    socketService.off('adopt-request-requester')\n    socketService.off('already-requested')\n  }\n\n  adoptNotify = (msg) => {\n    store.addNotification({\n      title: \"Wonderful!\",\n      message: msg,\n      type: \"info\",\n      insert: \"top\",\n      container: \"bottom-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 4000,\n        onScreen: false\n      }\n    });\n  }\n  alertNotify = (msg) => {\n    store.addNotification({\n      title: \"\",\n      message: '',\n      type: \"info\",\n      insert: \"top\",\n      container: \"bottom-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 4000,\n        onScreen: false\n      }\n    });\n  }\n  render() {\n\n    return (\n      // <Link to='/profile' >\n      // <Link>\n      <>\n        <ReactNotification />\n      </>\n      // </Link>\n\n    )\n  }\n}\n","/Users/itairom/Desktop/petMe/frontend/src/cmps/FilterSelect.jsx",["181"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { PetFilter } from './PetFilter'\n\n\nexport class _FilterSelect extends React.Component {\n    componentDidMount() {\n\n    }\n    render() {\n        const { options, name, handleChange } = this.props\n\n        return (\n            <div  className={'select-modal'} >\n                {options.map(option => {\n                    return <option  onClick={() => handleChange(option, name)} >{option}</option>\n                })}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\nconst mapDispatchToProps = {\n\n}\n\nexport const FilterSelect = connect(mapStateToProps, mapDispatchToProps)(_FilterSelect)",{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":12},{"ruleId":"186","severity":1,"message":"190","line":9,"column":10,"nodeType":"188","messageId":"189","endLine":9,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":118,"column":41,"nodeType":"193","endLine":118,"endColumn":86},{"ruleId":"194","severity":1,"message":"195","line":54,"column":46,"nodeType":"188","messageId":"196","endLine":54,"endColumn":50},{"ruleId":"197","severity":1,"message":"198","line":13,"column":5,"nodeType":"199","messageId":"200","endLine":14,"endColumn":61},{"ruleId":"186","severity":1,"message":"201","line":10,"column":8,"nodeType":"188","messageId":"189","endLine":10,"endColumn":18},{"ruleId":"186","severity":1,"message":"202","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":23},{"ruleId":"186","severity":1,"message":"203","line":7,"column":8,"nodeType":"188","messageId":"189","endLine":7,"endColumn":23},{"ruleId":"186","severity":1,"message":"204","line":58,"column":17,"nodeType":"188","messageId":"189","endLine":58,"endColumn":30},{"ruleId":"186","severity":1,"message":"205","line":58,"column":42,"nodeType":"188","messageId":"189","endLine":58,"endColumn":48},{"ruleId":"186","severity":1,"message":"206","line":72,"column":15,"nodeType":"188","messageId":"189","endLine":72,"endColumn":26},{"ruleId":"186","severity":1,"message":"207","line":8,"column":10,"nodeType":"188","messageId":"189","endLine":8,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":21,"column":31,"nodeType":"210","messageId":"211","endLine":21,"endColumn":33},{"ruleId":"208","severity":1,"message":"209","line":35,"column":37,"nodeType":"210","messageId":"211","endLine":35,"endColumn":39},{"ruleId":"182","replacedBy":"212"},{"ruleId":"184","replacedBy":"213"},{"ruleId":"186","severity":1,"message":"214","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":14},{"ruleId":"186","severity":1,"message":"215","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":19},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-use-before-define","'user' was used before it was defined.","usedBeforeDefined","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'rightArrow' is defined but never used.","'socketService' is defined but never used.","'magnifyingGlass' is defined but never used.","'isFilterShown' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'sizeOptions' is assigned a value but never used.","'petService' is defined but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["216"],["217"],"'Link' is defined but never used.","'PetFilter' is defined but never used.","no-global-assign","no-unsafe-negation"]