[{"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\index.js":"1","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\store.js":"4","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\App.jsx":"5","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\Header.jsx":"6","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\reducers\\index.js":"7","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\reducers\\userReducer.js":"8","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\reducers\\systemReducer.js":"9","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\PetList.jsx":"10","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\PetPreview.jsx":"11","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\services\\petService.js":"12","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\reducers\\petReducer.js":"13","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\services\\asyncStorageService.js":"14","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\pages\\PetApp.jsx":"15","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\pages\\PetDetails.jsx":"16","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\actions\\petActions.js":"17","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\pages\\Explore.jsx":"18","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\actions\\userActions.js":"19","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\services\\userService.js":"20","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\services\\httpService.js":"21","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\Footer.jsx":"22","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\PetFilter.jsx":"23","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\CommentsCmp.jsx":"24","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\LongTxt.jsx":"25","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\pages\\LoginSignup.jsx":"26","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\services\\utilService.js":"27","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\pages\\Profile.jsx":"28","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\GoogleMap.jsx":"29","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\services\\socketService.js":"30","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\HeartLike.jsx":"31","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\HomepagePreview.jsx":"32"},{"size":937,"mtime":1622114111927,"results":"33","hashOfConfig":"34"},{"size":5201,"mtime":1622113035407,"results":"35","hashOfConfig":"34"},{"size":377,"mtime":1622113035406,"results":"36","hashOfConfig":"34"},{"size":439,"mtime":1622123837701,"results":"37","hashOfConfig":"34"},{"size":1220,"mtime":1622725158168,"results":"38","hashOfConfig":"34"},{"size":3874,"mtime":1622725158181,"results":"39","hashOfConfig":"34"},{"size":319,"mtime":1622123837700,"results":"40","hashOfConfig":"34"},{"size":1373,"mtime":1622725158204,"results":"41","hashOfConfig":"34"},{"size":322,"mtime":1622113035417,"results":"42","hashOfConfig":"34"},{"size":363,"mtime":1622444548509,"results":"43","hashOfConfig":"34"},{"size":1988,"mtime":1622725158246,"results":"44","hashOfConfig":"34"},{"size":1833,"mtime":1622725158188,"results":"45","hashOfConfig":"34"},{"size":2126,"mtime":1622725158203,"results":"46","hashOfConfig":"34"},{"size":3486,"mtime":1622617659507,"results":"47","hashOfConfig":"34"},{"size":8211,"mtime":1622725522933,"results":"48","hashOfConfig":"34"},{"size":9778,"mtime":1622725361182,"results":"49","hashOfConfig":"34"},{"size":2374,"mtime":1622725158198,"results":"50","hashOfConfig":"34"},{"size":2727,"mtime":1622725438291,"results":"51","hashOfConfig":"34"},{"size":2310,"mtime":1622725158202,"results":"52","hashOfConfig":"34"},{"size":2266,"mtime":1622631717677,"results":"53","hashOfConfig":"34"},{"size":1136,"mtime":1622113035410,"results":"54","hashOfConfig":"34"},{"size":757,"mtime":1622712921113,"results":"55","hashOfConfig":"34"},{"size":4025,"mtime":1622725158261,"results":"56","hashOfConfig":"34"},{"size":4722,"mtime":1622725158180,"results":"57","hashOfConfig":"34"},{"size":871,"mtime":1622313663544,"results":"58","hashOfConfig":"34"},{"size":4939,"mtime":1622631717671,"results":"59","hashOfConfig":"34"},{"size":2198,"mtime":1622481838047,"results":"60","hashOfConfig":"34"},{"size":5289,"mtime":1622725158185,"results":"61","hashOfConfig":"34"},{"size":1506,"mtime":1622635333388,"results":"62","hashOfConfig":"34"},{"size":2590,"mtime":1622725158194,"results":"63","hashOfConfig":"34"},{"size":2646,"mtime":1622725158182,"results":"64","hashOfConfig":"34"},{"size":1882,"mtime":1622725158184,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"18bynin",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\index.js",[],["139","140"],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\store.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\App.jsx",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\Header.jsx",["141"],"import userIcon from '../assets/img/header/user.svg' // relative path to image \r\nimport menuIcon from '../assets/img/header/menu.svg' // relative path to image \r\nimport logo from '../assets/img/logo.png' // relative path to image \r\nimport React, { Component } from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions'\r\nimport { socketService } from '../services/socketService'\r\nimport { store } from 'react-notifications-component';\r\n\r\n\r\nimport { loadPets } from '../store/actions/petActions'\r\n\r\nclass _Header extends Component {\r\n\r\n    state = {\r\n        isProfileShown: false,\r\n        isRequested: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.props);\r\n        socketService.on('eyal', (data) => {\r\n            this.setState({ isRequested: true })\r\n            console.log(data)\r\n            console.log('requested from socket')\r\n            store.addNotification({\r\n                title: \"Wonderful!\",\r\n                message: data.message,\r\n                type: \"info\",\r\n                insert: \"top-right\",\r\n                container: \"bottom-right\",\r\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                dismiss: {\r\n                    duration: 5000,\r\n                    onScreen: true\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    toggleDropdown = () => {\r\n        this.setState({ isProfileShown: !this.state.isProfileShown })\r\n    }\r\n\r\n    onLogout = () => {\r\n        this.props.logout()\r\n        // this.props.history.push('/')\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { loggedInUser } = this.props\r\n        const { isProfileShown } = this.state\r\n\r\n        return <header className=\"main-header main-container\">\r\n            <nav className=\"header-container\">\r\n                <NavLink onClick={ () => this.props.loadPets() } to=\"/\">\r\n                    <img className=\"header-logo\" src={ logo } alt=\"PetMe\" />\r\n                </NavLink>\r\n                <div>\r\n                    {/* <span>{ (this.state.isRequested) ? 'requests' : '' }</span> */ }\r\n\r\n                </div>\r\n\r\n                <div className=\"right-nav\">\r\n                    <NavLink className=\"explore-btn\" to='/explore/?gender=&age=&type=&location=&size='>Explore</NavLink>\r\n                    <div onClick={ () => this.toggleDropdown() } className=\"login-profile\">\r\n                        { isProfileShown && <div className=\"user-dropdown\">\r\n                            <div className=\"dropdown-list\">\r\n                                { (loggedInUser) && <Link to='/profile' >\r\n                                    <span>Profile</span>\r\n                                </Link> }\r\n\r\n                                { (loggedInUser) &&\r\n                                    <a href=\"\" onClick={ () => this.onLogout() }>Logout</a>\r\n                                }\r\n                                { (!loggedInUser) && <Link to='/login' >\r\n                                    <span>Login</span>\r\n                                </Link> }\r\n                            </div>\r\n                        </div> }\r\n\r\n                        <img src={ menuIcon } alt=\"icon\" />\r\n                        { (!loggedInUser) && <img src={ userIcon } alt=\"icon\" /> }\r\n                        { (loggedInUser) && <img className=\"profile-icon\" src={ loggedInUser.imgUrl } alt=\"icon\" /> }\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header >\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout, loadPets\r\n}\r\n\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\PetList.jsx",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\PetPreview.jsx",["142"],"\r\nimport React from 'react'\r\nimport { ReactComponent as Male } from '../assets/img/svg/mars.svg'\r\nimport { ReactComponent as Female } from '../assets/img/svg/venus.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport \"../../node_modules/slick-carousel/slick/slick.css\";\r\nimport \"../../node_modules/slick-carousel/slick/slick-theme.css\";\r\n// import \"../assets/styles/cmps/slick.scss\"\r\n// import \"../assets/styles/cmps/slick-theme.scss\"\r\nimport { HeartLike } from './HeartLike'\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nexport class PetPreview extends React.Component {\r\n\r\n    render() {\r\n        const settings = {\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1\r\n        };\r\n        const { pet } = this.props\r\n        if (!pet) <h1>Loading...</h1>\r\n        const gender = pet?.gender === 'female' ? <Female className=\"gender\" /> : <Male className=\"gender\" />\r\n        return (\r\n            <section className=\"pet-card-container\">\r\n                <Link key={ pet._id } to={ `/${pet._id}` }>\r\n                    <Slider { ...settings }>\r\n                        { pet.imgUrls.map(imgUrl => <img src={ imgUrl } alt=\"\" key={ pet._id } />) }\r\n                    </Slider>\r\n                </Link>\r\n                <div className=\"card-info\">\r\n                    <div className=\"pet-name-gender flex\">\r\n                        <p>{ pet.name }</p>\r\n                        { gender }\r\n                    </div>\r\n                    <p className=\"pet-title\">{ pet.title }</p>\r\n                    <div className=\"pet-preview-host flex\">\r\n                        <p>{ pet.owner.name }</p>\r\n                        <div className=\"pet-preview-likes flex\">\r\n                            <HeartLike pet={ pet } />\r\n                            <span>{ pet.likes }</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\services\\petService.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\reducers\\petReducer.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\services\\asyncStorageService.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\pages\\PetApp.jsx",["143"],"import { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport { loadPets, addPet } from '../store/actions/petActions'\r\nimport { Link } from 'react-router-dom'\r\nimport { PetFilter } from '../cmps/PetFilter'\r\nimport { HomepagePreview } from '../cmps/HomepagePreview'\r\nimport { PetPreview } from '../cmps/PetPreview'\r\nimport contact from '../assets/img/svg/contact.svg'\r\nimport info from '../assets/img/svg/info.svg'\r\nimport paw from '../assets/img/svg/paw.svg'\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\n\r\n\r\nclass _PetApp extends React.Component {\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadPets()\r\n    }\r\n    render() {\r\n        const { pets } = this.props\r\n        if (pets.length === 0) return <h1>loading</h1>\r\n        return (\r\n            <section className=\"main-container\">\r\n                <section className=\"hero full\">\r\n                    <div className=\"hero-content\">\r\n                        < PetFilter />\r\n                            <h1>Find your</h1>\r\n                            <h1> best friend</h1>\r\n                    </div>\r\n                </section>\r\n                <div className=\"type-cards\">\r\n                    <h2 className=\"type-cards-title\">Our sweet pet types</h2>\r\n                    <div className=\"type-img\">\r\n                        <div>\r\n                            <Link to={`/explore/?gender=&age=&type=dog&location=&size=`} >\r\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622205405/dogs/dog3/frnach-dog3_npdovb.jpg\" alt=\"card\" />\r\n                                <h4>Dogs</h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link to={`/explore/?gender=&age=&type=cat&location=&size=`} >\r\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622203804/petMe/cats/cat_nnrk1h.jpg\" alt=\"card\" />\r\n                                <h4>Cats</h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link to={`/explore/?gender=&age=&type=rabbit&location=&size=`} >\r\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622206572/petMe/rabbit/rrabit3/1_2_chadja.jpg\" alt=\"card\" />\r\n                                <h4>Rabbits</h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link to={`/explore/?gender=&age=&type=parrot&location=&size=`} >\r\n                                <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622213930/petMe/parrot/1_3_s1zdqk.jpg\" alt=\"card\" />\r\n                                <h4>Parrots</h4>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <section className=\"homepage-section-info\">\r\n                    <div className=\"content\">\r\n                        <div>\r\n                            <div className=\"info-title-icon\">\r\n                                <h2>Filter down to your perfect fit</h2>\r\n                                {/* <img className=\"info-icons\" src={magnifyingGlass} alt=\"glass\" /> */}\r\n                                <SearchOutlinedIcon className=\"info-icons\" />\r\n                            </div>\r\n                            <p> Personalize your search with filters like gender,\r\n                            type, size or a pool to get exactly what you want.\r\n                            </p>\r\n                            {/* <RightArrow className=\"arrow-icons\" /> */}\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"info-title-icon\">\r\n                                <h2>Dig into the details</h2>\r\n                                <img className=\"info-icons\" src={info} alt=\"glass\" />\r\n                            </div>\r\n                            <p> Check out the photos and view pet information.\r\n                                Next, read user reviews and comments about the pet and its owner.</p>\r\n                            {/* <RightArrow className=\"arrow-icons\" /> */}\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"info-title-icon\">\r\n                                <h2>Contact pet owners</h2>\r\n                                <img className=\"info-icons\" src={contact} alt=\"glass\" />\r\n                            </div>\r\n                            <p>  Once you have decided which pet you would like to adopt, contact the pet owners and keep your fingers crossed.</p>\r\n                            {/* <RightArrow className=\"arrow-icons\" /> */}\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"info-title-icon\">\r\n                                <h2>Adopt a friend!</h2>\r\n                                <img className=\"info-icons\" src={paw} alt=\"glass\" />\r\n                            </div>\r\n                            <p> In a quick and easy process you can adopt a pet that will become your new friend for life. </p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                {/* <section className=\"type-cards preview-homepage\">\r\n                    <h2 className=\"type-cards-title\">Waiting long time to adopt</h2>\r\n                    <div className=\"preview-cards\">\r\n                        <PetPreview pet={pets[9]} key={pets[9]._id} />\r\n                        <PetPreview pet={pets[13]} key={pets[13]._id} />\r\n                        <PetPreview pet={pets[1]} key={pets[1]._id} />\r\n                        <PetPreview pet={pets[14]} key={pets[14]._id} />\r\n                    </div>\r\n                </section>\r\n                <section className=\"type-cards preview-homepage\">\r\n                    <h2 className=\"type-cards-title\">Most Liked Pets Available For Adoption</h2>\r\n                    <div className=\"preview-cards\">\r\n                        <PetPreview pet={pets[4]} key={pets[4]._id} />\r\n                        <PetPreview pet={pets[5]} key={pets[5]._id} />\r\n                        <PetPreview pet={pets[6]} key={pets[6]._id} />\r\n                        <PetPreview pet={pets[7]} key={pets[7]._id} />\r\n                    </div>\r\n                </section> */}\r\n                <HomepagePreview pets={this.props.pets} />\r\n                <section className=\"homepage-about main-container full\">\r\n                    {/* <div className=\"inner-container flex\"> */}\r\n                    {/* <div className=\"about_imgs\"> */}\r\n                    {/* <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622209864/petMe/about-imgs/about1_rt4e2u.jpg\" alt=\"card\" />\r\n                            <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622210087/petMe/about-imgs/about-cat_w78jtf.jpg\" alt=\"card\" />\r\n                            <img src=\"https://res.cloudinary.com/dstqymucm/image/upload/v1622210260/petMe/about-imgs/boy-and-cat_hd5uqt.jpg\" alt=\"card\" /> */}\r\n                    {/* </div> */}\r\n                    {/* </div> */}\r\n                    <div className=\"blur full\">\r\n                        <div className=\"about-content main-container\">\r\n                            <h2>Our vision</h2>\r\n                            <p>PetMe is dedicated to saving the lives of animals in need. We improve animal welfare in communities through adoption, education, and providing resources for people and pets.</p>\r\n                            <p>We strive for a world where every companion animal has a safe and loving home and their family has the knowledge and resources needed to give them the life they deserve.</p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        pets: state.petModule.pets\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    loadPets,\r\n    addPet\r\n}\r\n\r\nexport const PetApp = connect(mapStateToProps, mapDispatchToProps)(_PetApp)","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\pages\\PetDetails.jsx",["144"],"import React, { Component } from 'react'\r\nimport { petService } from '../services/petService'\r\nimport { utilService } from '../services/utilService'\r\nimport { socketService } from '../services/socketService'\r\nimport { connect } from 'react-redux'\r\nimport { toggleLike, loadPets } from '../store/actions/petActions'\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport { LongTxt } from '../cmps/LongTxt'\r\nimport { CommentsCmp } from '../cmps/CommentsCmp'\r\nimport { HeartLike } from '../cmps/HeartLike'\r\nimport { GoogleMap } from '../cmps/GoogleMap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { faEnvelope, faShare, faVenusMars, faCat, faSyringe, faStethoscope, faCalendar } from '@fortawesome/free-solid-svg-icons';\r\nimport { faWhatsapp } from '@fortawesome/free-brands-svg-icons'\r\nimport SportsIcon from '@material-ui/icons/Sports';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\r\n\r\n\r\nclass _PetDetails extends Component {\r\n    state = {\r\n        pet: null,\r\n        owner: null,\r\n        loggedInUser: null,\r\n        isEditMode: false,\r\n        isOpanModal: false,\r\n        isAttend: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.match.params.petId;\r\n        // socketService.setup()\r\n        // socketService.emit('adopt-request', id)\r\n        socketService.on('eyal', () => {\r\n            console.log('im on!')\r\n        })\r\n\r\n        this.props.loadPets()\r\n            .then(() => {\r\n                const pet = this.props.pets.find(pet => pet._id === id)\r\n                this.props.loadUsers()\r\n                    .then(() => {\r\n                        const user = this.props.users.find(user => user._id === pet.owner._id)\r\n                        this.setState({ pet, owner: user, loggedInUser: this.props.loggedInUser })\r\n                    })\r\n            })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const { name } = target\r\n        const { value } = target\r\n        this.setState({ pet: { ...this.state.pet, [name]: value } })\r\n    }\r\n\r\n    onShare = () => {\r\n        this.setState({ isOpanModal: !this.state.isOpanModal })\r\n    }\r\n\r\n    //owner only btn \r\n    onUpdatePet = () => {\r\n        this.props.updatePet(this.state.pet)\r\n        this.toggleEditMode()\r\n    }\r\n\r\n    //for owner edit adoption option\r\n    toggleEditMode = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n\r\n    onAdopt = () => {\r\n        const { pet, owner, loggedInUser } = this.state\r\n        // console.log('pet, owner, loggedInUser', pet, owner, loggedInUser)\r\n        if (!loggedInUser) return alert('Please login in order to adopt this pet ')\r\n        if (loggedInUser.pets.find(loggedInUserPet => loggedInUserPet._id === pet._id)) return alert('You cannot adopt you own pet')\r\n        this.setState({ isAttend: true })\r\n        const data = {\r\n            owner: owner,\r\n            userId: loggedInUser._id,\r\n            date: Date.now(),\r\n            message: `${loggedInUser.fullname} would like to adopt ${pet.name} \\n Click to view`,\r\n            fullname: loggedInUser.fullname\r\n        }\r\n        // AdoptAction()\r\n        socketService.emit('adopt-request', data)\r\n    }\r\n\r\n\r\n    //if the user clicked attend let the user reclick to undo\r\n    toggleAdopted = () => {\r\n        this.setState({ isAttend: true })\r\n    }\r\n\r\n    onRemovePet = () => {\r\n        petService.remove(this.state.pet._id)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        const id = this.props.match.params.petId\r\n        const pet = this.props.pets.find(pet => pet._id === id)\r\n        // const { pet } = this.props\r\n        if (!pet) return <h1>loading</h1>\r\n\r\n        return (\r\n            <section className=\"pet-details-section main-container\">\r\n                <header className=\"details-header flex column\">\r\n                    <div className=\"details-title flex column\">\r\n                        <h1 className=\"pet-name\">{pet.name}</h1>\r\n                    </div>\r\n                    <div className=\"details-header-btns\">\r\n                        {/* TODO: add icons +actions btns */}\r\n                        <HeartLike pet={pet} />\r\n                        <span className=\"pet-likes\">{pet.likes}</span>\r\n\r\n                        <span className=\"share-pet\" onClick={() => this.onShare}><ShareIcon />\r\n                            <div className={'share-modal' + this.state.isOpanModal ? 'hide' : ''}>\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                </header>\r\n                <div className=\"details-imgs-container grid\">\r\n                    {pet.imgUrls.map((imgUrl, idx) => {\r\n                        return <img key={pet._id + idx} src={imgUrl} alt=\"skeleton\" />\r\n                    })}\r\n                </div>\r\n                <div className=\"details-main-section flex\">\r\n\r\n                    <div className=\"details-info-container\">\r\n                        <div className=\"info-header flex \">\r\n                            <div className=\"info-header-txt flex column\">\r\n                                <h3>{pet.name + ', owned by ' + pet.owner.name}</h3>\r\n                                <span>{pet.title}</span>\r\n\r\n                            </div>\r\n                            <img src={pet.owner.imgUrl} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"info-body\">\r\n                            <LongTxt className=\"pet-desc\" txt={pet.desc} />\r\n                            {/* <p className=\"pet-desc\">{ pet.desc }</p> */}\r\n                            <ul className=\"pet-info-list clean-list\">\r\n                                <li className=\"flex align-center\">\r\n                                    <FontAwesomeIcon icon={faCalendar} />\r\n                                    <p>\r\n                                        Age: {(pet.age === 1) ? pet.age + ' year old' : pet.age + ' years old'}\r\n                                    </p>\r\n                                </li>\r\n                                <li className=\"flex align-center\">\r\n                                    <FontAwesomeIcon icon={faVenusMars} />\r\n                                    <p>\r\n                                        Gender: {pet.gender}\r\n                                    </p>\r\n                                </li>\r\n                                <li className=\"flex align-center\">\r\n                                    <FontAwesomeIcon icon={faCat} />\r\n                                    <p>\r\n                                        Breed: {pet.breed}\r\n                                    </p>\r\n                                </li>\r\n                                <li className=\"flex align-center\">\r\n                                    <FontAwesomeIcon icon={faSyringe} />\r\n                                    <p>\r\n                                        vaccinated: {pet.vaccine ? 'yes' : 'no'}\r\n                                    </p>\r\n                                </li>\r\n                                <li className=\"flex align-center\">\r\n                                    <FontAwesomeIcon icon={faStethoscope} />\r\n                                    <p>\r\n                                        Spayed/Neutered: {pet.neuterSpayed ? 'yes' : 'no'}\r\n                                    </p>\r\n                                </li>\r\n                                <li className=\"flex align-center\">\r\n                                    <SportsIcon />\r\n                                    <p>\r\n                                        trained: {pet.trained ? 'yes' : 'no'}\r\n                                    </p>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"adopt-modal-container flex column\">\r\n                        <span className=\"adoption-time adopt-sign\">{'Looking for    a home for ' + utilService.timeSince(pet.addedAt)}</span>\r\n                        <span className=\"adoption-likes adopt-sign\">{'Liked by ' + pet.likes + ' people!'}</span>\r\n                        <button className=\"adopt-btn el-btn\" onClick={() => this.onAdopt()}>{(this.state.isAttend) ? 'Request sent' : 'Adopt Me'}</button>\r\n                        <span><FontAwesomeIcon icon={faEnvelope} /> {pet.owner.name.split(' ')[0].toLowerCase() + '@gmail.com'}</span>\r\n                        <span><FontAwesomeIcon icon={faWhatsapp} /> 054-2312993</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"comments-section\">\r\n                    <CommentsCmp pet={pet} key={pet._id} />\r\n                </div>\r\n                {/* <button onClick={ () => this.onRemovePet() }>Delete</button> */}\r\n                <section className=\"google-map section\">\r\n                    <h3 className=\"pet-loc\">Where to find me</h3>\r\n                    <div className=\"pet-location\">\r\n                        <RoomOutlinedIcon />\r\n                        {pet.owner.loc.address}\r\n                    </div>\r\n                    {/* <span>{ pet.owner.loc.address }</span> */}\r\n                    <GoogleMap loc={pet.owner.loc} />\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.userModule.users,\r\n        pets: state.petModule.pets,\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    toggleLike,\r\n    loadPets,\r\n    loadUsers,\r\n}\r\n\r\nexport const PetDetails = connect(mapStateToProps, mapDispatchToProps)(_PetDetails)\r\n\r\n","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\actions\\petActions.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\pages\\Explore.jsx",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\services\\userService.js",["145"],"import { storageService } from './asyncStorageService'\r\nimport { httpService } from '../services/httpService'\r\n\r\n\r\n\r\n\r\n// ]\r\n\r\nexport const userService = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  getUsers,\r\n  getById,\r\n  remove,\r\n  update,\r\n  getLoggedinUser,\r\n  adoptRequest\r\n}\r\n\r\n// window.userService = userService\r\n\r\n// async function getUsers(filterBy = '') {\r\n//   let users = await storageService.query()\r\n//   if (!users || !users.length) {\r\n//     console.log('in');\r\n//     users = gUsers;\r\n//     storageService.save('user', users);\r\n//   }\r\n//   return users;\r\n// }\r\n\r\n\r\nfunction getUsers() {\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n  // return storageService.get('user', userId)\r\n  return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n  return storageService.remove('user', userId)\r\n  // return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n  return storageService.put('user', user)\r\n  // user = await httpService.put(`user/${user._id}`, user)\r\n  // Handle case in which admin updates other user's details\r\n  if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function adoptRequest(request){\r\n  // return storageService.put('user/req', user)\r\n  return httpService.put('user/request', request)\r\n  // Handle case in which admin updates other user's details\r\n  // if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nasync function login(userCred) {\r\n  // const users = await storageService.query('user')\r\n  // const user = users.find(user => user.username === userCred.username)\r\n  // return _saveLocalUser(user)\r\n\r\n  const user = await httpService.post('user/login', userCred)\r\n  if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n  const user = await storageService.post('user', userCred)\r\n  // const user = await httpService.post('auth/signup', userCred)\r\n  return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n  sessionStorage.clear()\r\n  // return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n  sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n  return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n  return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\Footer.jsx",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\PetFilter.jsx",["146"],"import magnifyingGlass from '../assets/img/svg/magnifying-glass.svg' // relative path to image \r\nimport {  withRouter } from 'react-router-dom'\r\nimport React from 'react'\r\n\r\n\r\n\r\nclass _PetFilter extends React.Component {\r\n\r\n    state = {\r\n        filterBy: {\r\n            gender: '',\r\n            type: '',\r\n            age: '',\r\n            size: '',\r\n            location: ''\r\n        }\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const { name, value } = target\r\n        const { filterBy } = this.state\r\n        this.setState({ filterBy: { ...filterBy, [name]: value } })\r\n    }\r\n\r\n    onSubmitFilter = () => {\r\n        const query = new URLSearchParams(this.state.filterBy)\r\n        this.props.history.push(`/explore/?${query.toString()}`)\r\n    }\r\n\r\n    render() {\r\n        const { gender, age, type, location, size } = this.state.filterBy\r\n\r\n        return (\r\n\r\n            <section className='pet-filter'>\r\n                <div className=\"filter-select pet-select\">\r\n                    <label >Pet</label>\r\n                    {/* <label  > */}\r\n                    <select className='main-select' value={type} onChange={this.handleChange} name=\"type\" >\r\n                        <option className=\"any-placeholder\" value=\"\">Any</option>\r\n                        <option value=\"cat\">Cat</option>\r\n                        <option value=\"dog\">Dog</option>\r\n                        <option value=\"rabbit\">Rabbit</option>\r\n                        <option value=\"parrot\">Parrot</option>\r\n                        <option value=\"hamster\">Hamster</option>\r\n                    </select>\r\n                    {/* </label> */}\r\n                </div>\r\n                <div className=\"filter-select gender-select\">\r\n                    <label >Gender</label>\r\n                    {/* <label > */}\r\n                    <select className='main-select' value={gender} onChange={this.handleChange} name=\"gender\" >\r\n                        <option className=\"any-placeholder\" value=\"\">Both</option>\r\n                        <option value=\"male\">Male</option>\r\n                        <option value=\"female\">Female</option>\r\n                    </select>\r\n                    {/* </label> */}\r\n                </div>\r\n                <div className=\"filter-select age-select\">\r\n                    <label >Age</label>\r\n                    {/* <label  > */}\r\n                    <select className='main-select' value={age} onChange={this.handleChange} name=\"age\" >\r\n                        <option className=\"any-placeholder\" value=\"\">Any</option>\r\n                        <option value=\"young\">Young</option>\r\n                        <option value=\"adult\">Adult</option>\r\n                        <option value=\"senior\">Senior</option>\r\n                    </select>\r\n                    {/* </label> */}\r\n                </div>\r\n                <div className=\"filter-select size-select\">\r\n                    <label >Size</label>\r\n                    {/* <label > */}\r\n                    <select className='main-select' value={size} onChange={this.handleChange} name=\"size\" >\r\n                        <option className=\"any-placeholder\" value=\"\">Any</option>\r\n                        <option value=\"small\">Small</option>\r\n                        <option value=\"medium\">Mediun</option>\r\n                        <option value=\"big\">Big</option>\r\n                    </select>\r\n                    {/* </label> */}\r\n                </div>\r\n                <div className=\"filter-select location-select\">\r\n                    <label >Location</label>\r\n                    <input placeholder=\"Enter location\" className='location-select' value={location} onChange={this.handleChange} name=\"location\"  ></input>\r\n                </div>\r\n\r\n                <button className=\"search-btn\" onClick={this.onSubmitFilter}>\r\n                    <img className=\"filter-search\" src={magnifyingGlass} alt=\"glass\" />\r\n                </button>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport const PetFilter = withRouter(_PetFilter)","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\CommentsCmp.jsx",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\LongTxt.jsx",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\pages\\Profile.jsx",["147"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Loader from '../assets/img/loaders/loader_3.svg' // relative path to image \r\nimport Pin from '../assets/img/svg/pin.svg' // relative path to image \r\nimport { petService } from '../services/petService'\r\nimport { utilService } from '../services/utilService'\r\nimport { socketService } from '../services/socketService'\r\nimport { store } from 'react-notifications-component';\r\n\r\n\r\nimport {\r\n    loadUsers,\r\n    removeUser,\r\n    login,\r\n    logout,\r\n    signup\r\n} from '../store/actions/userActions'\r\n\r\nclass _Profile extends Component {\r\n    state = {\r\n        userPets: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        socketService.on('user-updated', (data) => {\r\n            console.log(data)\r\n        })\r\n        // this.onLoadPets()\r\n        // this.props.loadUsers()\r\n        // console.log(this.props.loggedInUser)\r\n        // socketService.on('data-to-profile', (data) => {\r\n        //     console.log('data recived in profile', data)\r\n        //     console.log('requested from socket')\r\n        //     console.log('loggedninuser', this.props.loggedInUser)\r\n        //     store.addNotification({\r\n        //         title: \"Wonderful!\",\r\n        //         message: data.message,\r\n        //         type: \"info\",\r\n        //         insert: \"top-right\",\r\n        //         container: \"bottom-right\",\r\n        //         animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n        //         animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n        //         dismiss: {\r\n        //             duration: 5000,\r\n        //             onScreen: true\r\n        //         }\r\n        //     });\r\n        // })\r\n    }\r\n\r\n    onLoadPets = () => {\r\n        let pets = []\r\n        this.props.loggedInUser.pets.forEach(pet =>\r\n            petService.getPetByid(pet._id)\r\n                .then(petItem => {\r\n                    pets.unshift(petItem)\r\n                })\r\n        )\r\n        this.setState({ userPets: pets })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { loggedInUser } = this.props\r\n        const { userPets } = this.state\r\n        if (!loggedInUser) return <img src={ Loader } alt=\"loadnig\" />\r\n        if (!userPets) return <img src={ Loader } alt=\"loadnig\" />\r\n        console.log(\"🚀 ~ file: Profile.jsx ~ line 45 ~ _Profile ~ render ~ userPets\", userPets)\r\n        return (\r\n            <section className=\"main-profile\">\r\n                <section className=\"user-card\">\r\n                    <section className=\"user-info\">\r\n                        <h1>{ loggedInUser.fullname }</h1>\r\n                        <img src={ loggedInUser.imgUrl } alt=\"img\" />\r\n                        <div className=\"location-info\">\r\n                            <img src={ Pin } alt=\"location info\" />\r\n                            <div>{ loggedInUser.loc.address }</div>\r\n                        </div>\r\n                    </section>\r\n                </section>\r\n\r\n                <section className=\"user-pets\">\r\n                    <h1>Your pets</h1>\r\n                    { userPets.map((pet, idx) => {\r\n                        return (\r\n\r\n                            <div className=\"adopt-card\">\r\n                                <h2>{ pet.name }</h2>\r\n\r\n                                <section className=\"adopt-table\">\r\n                                    <img src={ pet.imgUrls[0] }\r\n                                        alt=\"pet\" />\r\n                                    <table>\r\n                                        <thead className=\"table-head\">\r\n                                            <tr>\r\n                                                <td>Adopter Name</td>\r\n                                                <td>Message</td>\r\n                                                <td>Date</td>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody className=\"table-body\">\r\n                                            { loggedInUser.pets[idx]\r\n                                                .adoptQue.map(pet => {\r\n                                                    return (<tr>\r\n                                                        <td>{ pet.fullname }</td>\r\n                                                        <td>{ pet.message }</td>\r\n                                                        <td>{ utilService.timeSince(pet.date, 'ago') }</td>\r\n                                                    </tr>)\r\n                                                }) }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </section>\r\n                            </div>\r\n\r\n                        )\r\n                    }) }\r\n\r\n                </section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </section >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        isLoading: state.systemModule.isLoading\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    removeUser,\r\n    loadUsers\r\n}\r\n\r\nexport const Profile = connect(mapStateToProps, mapDispatchToProps)(_Profile)\r\n","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\GoogleMap.jsx",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\services\\socketService.js",["148"],"import io from 'socket.io-client'\r\nimport { httpService } from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\nexport const SOCKET_EVENT_ADOPT_REQUEST = 'adopt-request';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false })\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      console.log('im in socketservice front on')\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb = null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      console.log('im in socketservice front emit')\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\nfunction cb(x) { console.log(x) }\r\nsocketService.on('baba', cb)\r\nsocketService.on('mama', cb)\r\nsocketService.on('lala', cb)\r\nsocketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n","C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\HeartLike.jsx",[],"C:\\Users\\igutm\\Desktop\\pet_me-main\\pet_me\\frontend\\src\\cmps\\HomepagePreview.jsx",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":80,"column":37,"nodeType":"155","endLine":80,"endColumn":82},{"ruleId":"156","severity":1,"message":"157","line":5,"column":28,"nodeType":"158","messageId":"159","endLine":5,"endColumn":33},{"ruleId":"156","severity":1,"message":"160","line":7,"column":10,"nodeType":"158","messageId":"159","endLine":7,"endColumn":20},{"ruleId":"156","severity":1,"message":"161","line":14,"column":22,"nodeType":"158","messageId":"159","endLine":14,"endColumn":29},{"ruleId":"162","severity":1,"message":"163","line":51,"column":3,"nodeType":"164","messageId":"165","endLine":51,"endColumn":63},{"ruleId":"156","severity":1,"message":"166","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":14},{"ruleId":"156","severity":1,"message":"167","line":8,"column":10,"nodeType":"158","messageId":"159","endLine":8,"endColumn":15},{"ruleId":"156","severity":1,"message":"168","line":16,"column":5,"nodeType":"158","messageId":"159","endLine":16,"endColumn":18},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Heart' is defined but never used.","Identifier","unusedVar","'PetPreview' is defined but never used.","'faShare' is defined but never used.","no-unreachable","Unreachable code.","IfStatement","unreachableCode","'Link' is defined but never used.","'store' is defined but never used.","'socketIsReady' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]